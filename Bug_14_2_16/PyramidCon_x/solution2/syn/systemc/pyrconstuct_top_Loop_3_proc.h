// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _pyrconstuct_top_Loop_3_proc_HH_
#define _pyrconstuct_top_Loop_3_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pyrconstuct_top_mul_mul_9ns_24s_32_3.h"
#include "pyrconstuct_top_Loop_3_proc_limits.h"
#include "pyrconstuct_top_Loop_3_proc_consFilters_V.h"

namespace ap_rtl {

struct pyrconstuct_top_Loop_3_proc : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > imgOutTmpBlockRam_M_real_V_address0;
    sc_out< sc_logic > imgOutTmpBlockRam_M_real_V_ce0;
    sc_in< sc_lv<24> > imgOutTmpBlockRam_M_real_V_q0;
    sc_out< sc_lv<9> > imgOutTmpBlockRam_M_imag_V_address0;
    sc_out< sc_logic > imgOutTmpBlockRam_M_imag_V_ce0;
    sc_in< sc_lv<24> > imgOutTmpBlockRam_M_imag_V_q0;
    sc_out< sc_lv<24> > fftPyrOut_M_real_V_din;
    sc_in< sc_logic > fftPyrOut_M_real_V_full_n;
    sc_out< sc_logic > fftPyrOut_M_real_V_write;
    sc_out< sc_lv<24> > fftPyrOut_M_imag_V_din;
    sc_in< sc_logic > fftPyrOut_M_imag_V_full_n;
    sc_out< sc_logic > fftPyrOut_M_imag_V_write;


    // Module declarations
    pyrconstuct_top_Loop_3_proc(sc_module_name name);
    SC_HAS_PROCESS(pyrconstuct_top_Loop_3_proc);

    ~pyrconstuct_top_Loop_3_proc();

    sc_trace_file* mVcdFile;

    pyrconstuct_top_Loop_3_proc_limits* limits_U;
    pyrconstuct_top_Loop_3_proc_consFilters_V* consFilters_V_U;
    pyrconstuct_top_mul_mul_9ns_24s_32_3<1,3,9,24,32>* pyrconstuct_top_mul_mul_9ns_24s_32_3_U7;
    pyrconstuct_top_mul_mul_9ns_24s_32_3<1,3,9,24,32>* pyrconstuct_top_mul_mul_9ns_24s_32_3_U8;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_22;
    sc_signal< sc_lv<4> > limits_address0;
    sc_signal< sc_logic > limits_ce0;
    sc_signal< sc_lv<10> > limits_q0;
    sc_signal< sc_lv<11> > consFilters_V_address0;
    sc_signal< sc_logic > consFilters_V_ce0;
    sc_signal< sc_lv<9> > consFilters_V_q0;
    sc_signal< sc_lv<11> > l_0_i_reg_120;
    sc_signal< sc_lv<32> > idx_reg_132;
    sc_signal< sc_lv<11> > coefIdx_0_i_reg_144;
    sc_signal< sc_lv<1> > exitcond_i1_fu_155_p2;
    sc_signal< sc_lv<1> > exitcond_i1_reg_299;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_76;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_i1_reg_299_pp0_it5;
    sc_signal< bool > ap_sig_bdd_98;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_i1_reg_299_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_i1_reg_299_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_i1_reg_299_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_i1_reg_299_pp0_it4;
    sc_signal< sc_lv<11> > coefIdx_fu_161_p2;
    sc_signal< sc_lv<9> > tmp_3_reg_318;
    sc_signal< sc_lv<32> > idx_1_fu_197_p2;
    sc_signal< sc_lv<32> > idx_1_reg_323;
    sc_signal< sc_lv<9> > consFilters_V_load_reg_328;
    sc_signal< sc_lv<9> > ap_reg_ppstg_consFilters_V_load_reg_328_pp0_it2;
    sc_signal< sc_lv<9> > ap_reg_ppstg_consFilters_V_load_reg_328_pp0_it3;
    sc_signal< sc_lv<11> > l_fu_219_p2;
    sc_signal< sc_lv<32> > i_1_fu_225_p3;
    sc_signal< sc_lv<32> > i_1_reg_338;
    sc_signal< sc_lv<32> > idx_2_fu_242_p3;
    sc_signal< sc_lv<32> > idx_2_reg_343;
    sc_signal< sc_lv<32> > OP2_V_cast_fu_262_p1;
    sc_signal< bool > ap_sig_bdd_163;
    sc_signal< sc_lv<11> > l_0_i_phi_fu_124_p4;
    sc_signal< sc_lv<32> > idx_phi_fu_136_p4;
    sc_signal< sc_lv<64> > tmp_2_fu_167_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_172_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_249_p1;
    sc_signal< sc_lv<32> > tmp_9_fu_191_p2;
    sc_signal< sc_lv<32> > nlimit_cast_fu_177_p1;
    sc_signal< sc_lv<32> > i_fu_203_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_209_p2;
    sc_signal< sc_lv<11> > tmp_17_cast_fu_215_p1;
    sc_signal< sc_lv<32> > half_fu_233_p1;
    sc_signal< sc_lv<1> > tmp_5_fu_236_p2;
    sc_signal< sc_lv<32> > grp_fu_285_p2;
    sc_signal< sc_lv<32> > grp_fu_292_p2;
    sc_signal< sc_lv<9> > grp_fu_285_p0;
    sc_signal< sc_lv<9> > grp_fu_292_p0;
    sc_signal< sc_logic > grp_fu_285_ce;
    sc_signal< sc_logic > grp_fu_292_ce;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_2;
    sc_signal< bool > ap_sig_bdd_284;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st9_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_5F0;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_200;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_OP2_V_cast_fu_262_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_163();
    void thread_ap_sig_bdd_22();
    void thread_ap_sig_bdd_284();
    void thread_ap_sig_bdd_76();
    void thread_ap_sig_bdd_98();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st9_fsm_2();
    void thread_coefIdx_fu_161_p2();
    void thread_consFilters_V_address0();
    void thread_consFilters_V_ce0();
    void thread_exitcond_i1_fu_155_p2();
    void thread_fftPyrOut_M_imag_V_din();
    void thread_fftPyrOut_M_imag_V_write();
    void thread_fftPyrOut_M_real_V_din();
    void thread_fftPyrOut_M_real_V_write();
    void thread_grp_fu_285_ce();
    void thread_grp_fu_285_p0();
    void thread_grp_fu_292_ce();
    void thread_grp_fu_292_p0();
    void thread_half_fu_233_p1();
    void thread_i_1_fu_225_p3();
    void thread_i_fu_203_p2();
    void thread_idx_1_fu_197_p2();
    void thread_idx_2_fu_242_p3();
    void thread_idx_phi_fu_136_p4();
    void thread_imgOutTmpBlockRam_M_imag_V_address0();
    void thread_imgOutTmpBlockRam_M_imag_V_ce0();
    void thread_imgOutTmpBlockRam_M_real_V_address0();
    void thread_imgOutTmpBlockRam_M_real_V_ce0();
    void thread_l_0_i_phi_fu_124_p4();
    void thread_l_fu_219_p2();
    void thread_limits_address0();
    void thread_limits_ce0();
    void thread_nlimit_cast_fu_177_p1();
    void thread_tmp_17_cast_fu_215_p1();
    void thread_tmp_2_fu_167_p1();
    void thread_tmp_4_fu_249_p1();
    void thread_tmp_5_fu_236_p2();
    void thread_tmp_6_fu_172_p1();
    void thread_tmp_9_fu_191_p2();
    void thread_tmp_s_fu_209_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
