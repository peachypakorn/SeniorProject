// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "pyrconstuct_top_Loop_2_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pyrconstuct_top_Loop_2_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pyrconstuct_top_Loop_2_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> pyrconstuct_top_Loop_2_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<2> pyrconstuct_top_Loop_2_proc::ap_ST_st2_fsm_1 = "10";
const sc_lv<32> pyrconstuct_top_Loop_2_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> pyrconstuct_top_Loop_2_proc::ap_const_lv1_1 = "1";
const sc_lv<32> pyrconstuct_top_Loop_2_proc::ap_const_lv32_1 = "1";
const sc_lv<1> pyrconstuct_top_Loop_2_proc::ap_const_lv1_0 = "0";
const sc_lv<10> pyrconstuct_top_Loop_2_proc::ap_const_lv10_0 = "0000000000";
const sc_lv<10> pyrconstuct_top_Loop_2_proc::ap_const_lv10_200 = "1000000000";
const sc_lv<10> pyrconstuct_top_Loop_2_proc::ap_const_lv10_1 = "1";
const sc_lv<32> pyrconstuct_top_Loop_2_proc::ap_const_lv32_18 = "11000";
const sc_lv<32> pyrconstuct_top_Loop_2_proc::ap_const_lv32_2F = "101111";

pyrconstuct_top_Loop_2_proc::pyrconstuct_top_Loop_2_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_i_fu_75_p2 );
    sensitive << ( ap_sig_bdd_60 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_i_fu_75_p2 );
    sensitive << ( ap_sig_bdd_60 );

    SC_METHOD(thread_ap_sig_bdd_21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_60);
    sensitive << ( imgOutTmpFFTStream_empty_n );
    sensitive << ( exitcond_i_fu_75_p2 );

    SC_METHOD(thread_ap_sig_bdd_69);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_21 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_53 );

    SC_METHOD(thread_exitcond_i_fu_75_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_bdd_60 );
    sensitive << ( i_0_i_reg_64 );

    SC_METHOD(thread_i_fu_81_p2);
    sensitive << ( i_0_i_reg_64 );

    SC_METHOD(thread_imgOutTmpBlockRam_M_imag_V_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_1_fu_87_p1 );

    SC_METHOD(thread_imgOutTmpBlockRam_M_imag_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_bdd_60 );

    SC_METHOD(thread_imgOutTmpBlockRam_M_imag_V_d0);
    sensitive << ( imgOutTmpFFTStream_dout );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_imgOutTmpBlockRam_M_imag_V_we0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_i_fu_75_p2 );
    sensitive << ( ap_sig_bdd_60 );

    SC_METHOD(thread_imgOutTmpBlockRam_M_real_V_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_1_fu_87_p1 );

    SC_METHOD(thread_imgOutTmpBlockRam_M_real_V_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_bdd_60 );

    SC_METHOD(thread_imgOutTmpBlockRam_M_real_V_d0);
    sensitive << ( imgOutTmpFFTStream_dout );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_imgOutTmpBlockRam_M_real_V_we0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_i_fu_75_p2 );
    sensitive << ( ap_sig_bdd_60 );

    SC_METHOD(thread_imgOutTmpFFTStream_read);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond_i_fu_75_p2 );
    sensitive << ( ap_sig_bdd_60 );

    SC_METHOD(thread_tmp_1_fu_87_p1);
    sensitive << ( i_0_i_reg_64 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_i_fu_75_p2 );
    sensitive << ( ap_sig_bdd_60 );
    sensitive << ( ap_sig_bdd_69 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pyrconstuct_top_Loop_2_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, imgOutTmpFFTStream_dout, "(port)imgOutTmpFFTStream_dout");
    sc_trace(mVcdFile, imgOutTmpFFTStream_empty_n, "(port)imgOutTmpFFTStream_empty_n");
    sc_trace(mVcdFile, imgOutTmpFFTStream_read, "(port)imgOutTmpFFTStream_read");
    sc_trace(mVcdFile, imgOutTmpBlockRam_M_real_V_address0, "(port)imgOutTmpBlockRam_M_real_V_address0");
    sc_trace(mVcdFile, imgOutTmpBlockRam_M_real_V_ce0, "(port)imgOutTmpBlockRam_M_real_V_ce0");
    sc_trace(mVcdFile, imgOutTmpBlockRam_M_real_V_we0, "(port)imgOutTmpBlockRam_M_real_V_we0");
    sc_trace(mVcdFile, imgOutTmpBlockRam_M_real_V_d0, "(port)imgOutTmpBlockRam_M_real_V_d0");
    sc_trace(mVcdFile, imgOutTmpBlockRam_M_imag_V_address0, "(port)imgOutTmpBlockRam_M_imag_V_address0");
    sc_trace(mVcdFile, imgOutTmpBlockRam_M_imag_V_ce0, "(port)imgOutTmpBlockRam_M_imag_V_ce0");
    sc_trace(mVcdFile, imgOutTmpBlockRam_M_imag_V_we0, "(port)imgOutTmpBlockRam_M_imag_V_we0");
    sc_trace(mVcdFile, imgOutTmpBlockRam_M_imag_V_d0, "(port)imgOutTmpBlockRam_M_imag_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_21, "ap_sig_bdd_21");
    sc_trace(mVcdFile, i_fu_81_p2, "i_fu_81_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_53, "ap_sig_bdd_53");
    sc_trace(mVcdFile, exitcond_i_fu_75_p2, "exitcond_i_fu_75_p2");
    sc_trace(mVcdFile, ap_sig_bdd_60, "ap_sig_bdd_60");
    sc_trace(mVcdFile, i_0_i_reg_64, "i_0_i_reg_64");
    sc_trace(mVcdFile, ap_sig_bdd_69, "ap_sig_bdd_69");
    sc_trace(mVcdFile, tmp_1_fu_87_p1, "tmp_1_fu_87_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pyrconstuct_top_Loop_2_proc::~pyrconstuct_top_Loop_2_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void pyrconstuct_top_Loop_2_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !ap_sig_bdd_60.read() && 
                    !esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0) && 
         !ap_sig_bdd_60.read())) {
        i_0_i_reg_64 = i_fu_81_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !ap_sig_bdd_69.read())) {
        i_0_i_reg_64 = ap_const_lv10_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !ap_sig_bdd_60.read() && 
          !esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !ap_sig_bdd_60.read() && 
         !esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_ap_sig_bdd_21() {
    ap_sig_bdd_21 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void pyrconstuct_top_Loop_2_proc::thread_ap_sig_bdd_53() {
    ap_sig_bdd_53 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void pyrconstuct_top_Loop_2_proc::thread_ap_sig_bdd_60() {
    ap_sig_bdd_60 = (esl_seteq<1,1,1>(imgOutTmpFFTStream_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0));
}

void pyrconstuct_top_Loop_2_proc::thread_ap_sig_bdd_69() {
    ap_sig_bdd_69 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void pyrconstuct_top_Loop_2_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_21.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_53.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_exitcond_i_fu_75_p2() {
    exitcond_i_fu_75_p2 = (!i_0_i_reg_64.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_64.read() == ap_const_lv10_200);
}

void pyrconstuct_top_Loop_2_proc::thread_i_fu_81_p2() {
    i_fu_81_p2 = (!i_0_i_reg_64.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_i_reg_64.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpBlockRam_M_imag_V_address0() {
    imgOutTmpBlockRam_M_imag_V_address0 =  (sc_lv<9>) (tmp_1_fu_87_p1.read());
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpBlockRam_M_imag_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !ap_sig_bdd_60.read())) {
        imgOutTmpBlockRam_M_imag_V_ce0 = ap_const_logic_1;
    } else {
        imgOutTmpBlockRam_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpBlockRam_M_imag_V_d0() {
    imgOutTmpBlockRam_M_imag_V_d0 = imgOutTmpFFTStream_dout.read().range(47, 24);
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpBlockRam_M_imag_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0) && 
          !ap_sig_bdd_60.read()))) {
        imgOutTmpBlockRam_M_imag_V_we0 = ap_const_logic_1;
    } else {
        imgOutTmpBlockRam_M_imag_V_we0 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpBlockRam_M_real_V_address0() {
    imgOutTmpBlockRam_M_real_V_address0 =  (sc_lv<9>) (tmp_1_fu_87_p1.read());
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpBlockRam_M_real_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !ap_sig_bdd_60.read())) {
        imgOutTmpBlockRam_M_real_V_ce0 = ap_const_logic_1;
    } else {
        imgOutTmpBlockRam_M_real_V_ce0 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpBlockRam_M_real_V_d0() {
    imgOutTmpBlockRam_M_real_V_d0 = imgOutTmpFFTStream_dout.read().range(24-1, 0);
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpBlockRam_M_real_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0) && 
          !ap_sig_bdd_60.read()))) {
        imgOutTmpBlockRam_M_real_V_we0 = ap_const_logic_1;
    } else {
        imgOutTmpBlockRam_M_real_V_we0 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_imgOutTmpFFTStream_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0) && 
         !ap_sig_bdd_60.read())) {
        imgOutTmpFFTStream_read = ap_const_logic_1;
    } else {
        imgOutTmpFFTStream_read = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_2_proc::thread_tmp_1_fu_87_p1() {
    tmp_1_fu_87_p1 = esl_zext<64,10>(i_0_i_reg_64.read());
}

void pyrconstuct_top_Loop_2_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_bdd_69.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!ap_sig_bdd_60.read() && !esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((esl_seteq<1,1,1>(exitcond_i_fu_75_p2.read(), ap_const_lv1_0) && !ap_sig_bdd_60.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

