-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cmpy_complex_top_Loop_2_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    factor_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    factor_V_empty_n : IN STD_LOGIC;
    factor_V_read : OUT STD_LOGIC;
    nL_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    nL_empty_n : IN STD_LOGIC;
    nL_read : OUT STD_LOGIC;
    refAtans_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    refAtans_V_ce0 : OUT STD_LOGIC;
    refAtans_V_q0 : IN STD_LOGIC_VECTOR (19 downto 0);
    prealign_V_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    prealign_V_TVALID : IN STD_LOGIC;
    prealign_V_TREADY : OUT STD_LOGIC;
    sig_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    sig_TVALID : IN STD_LOGIC;
    sig_TREADY : OUT STD_LOGIC;
    cmp_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    cmp_TVALID : OUT STD_LOGIC;
    cmp_TREADY : IN STD_LOGIC );
end;


architecture behav of cmpy_complex_top_Loop_2_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st36_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv77_4A8E89B935 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000100101010001110100010011011100100110101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv77_0 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv20_80000 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv38_0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv21_20000 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal p_Val2_7_reg_227 : STD_LOGIC_VECTOR (30 downto 0);
    signal nL_read_reg_979 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_bdd_63 : BOOLEAN;
    signal OP2_V_fu_254_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal OP2_V_reg_984 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_18_i_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_reg_989 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_75 : BOOLEAN;
    signal ap_sig_bdd_85 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it30 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it31 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it32 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_cmp_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it33 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_18_i_reg_989_pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_267_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_8_reg_998 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1057_fu_290_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1057_reg_1003 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1058_fu_294_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1058_reg_1008 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_tmp_1058_reg_1008_pp0_it1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1989_i_reg_1013 : STD_LOGIC_VECTOR (4 downto 0);
    signal val_V_fu_359_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal val_V_reg_1018 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1987_i_fu_421_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1987_i_reg_1023 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_i_fu_466_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_2_i_reg_1028 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_p_2_i_reg_1028_pp0_it2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_p_2_i_reg_1028_pp0_it3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_p_2_i_reg_1028_pp0_it4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_p_2_i_reg_1028_pp0_it5 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_p_2_i_reg_1028_pp0_it6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_p_2_i_reg_1028_pp0_it7 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_p_2_i_reg_1028_pp0_it8 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_3_i_fu_481_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_i_reg_1033 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it8 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it9 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it11 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it12 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it13 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it14 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it15 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it16 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it17 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it18 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it19 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it20 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1063_fu_490_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1063_reg_1043 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_13_reg_1048 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1064_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1064_reg_1058_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1064_reg_1058_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1064_reg_1058_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1064_reg_1058_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1064_reg_1058_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1064_reg_1058_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_return : STD_LOGIC_VECTOR (18 downto 0);
    signal xuout_V_i_reg_1064 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it12 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it13 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it14 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it15 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it16 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it17 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it18 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it19 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it20 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it21 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it22 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it23 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it24 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it25 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it26 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it27 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it28 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it29 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it30 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_518_p2 : STD_LOGIC_VECTOR (76 downto 0);
    signal mul_reg_1069 : STD_LOGIC_VECTOR (76 downto 0);
    signal tmp_1066_reg_1074 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_145_fu_577_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_145_reg_1079 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_16_fu_584_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_16_reg_1084 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1070_reg_1089 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1071_fu_671_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1071_reg_1094 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1072_reg_1099 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1073_reg_1104 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i5_fu_722_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_i5_reg_1110 : STD_LOGIC_VECTOR (19 downto 0);
    signal signbit_reg_1115 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i7_reg_1120 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_7_i_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_i_reg_1125 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_30_fu_856_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_30_reg_1130 : STD_LOGIC_VECTOR (15 downto 0);
    signal xout_cartesian_M_real_V_reg_1135 : STD_LOGIC_VECTOR (15 downto 0);
    signal xout_cartesian_M_imag_V_reg_1140 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_3_cast_fu_892_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_cmpy_complex_top_cordic_base_fu_238_inputData_cartesian_M_real_V_read : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cmpy_complex_top_cordic_base_fu_238_inputData_cartesian_M_imag_V_read : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cmpy_complex_top_cordic_base_fu_238_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_complex_top_cordic_base_fu_238_ap_ce : STD_LOGIC;
    signal grp_cmpy_complex_top_cordic_base_1_fu_244_inputData_phase_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_complex_top_cordic_base_1_fu_244_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_complex_top_cordic_base_1_fu_244_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_complex_top_cordic_base_1_fu_244_ap_ce : STD_LOGIC;
    signal grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_in_val_V_read : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_ce : STD_LOGIC;
    signal tmp_24_i_fu_486_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_cmp_TREADY : STD_LOGIC := '0';
    signal i_op_assign_cast_i_fu_258_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_273_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_s_fu_972_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal s_M_real_V_fu_298_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal s_M_imag_V_fu_302_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_26_fu_343_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP1_V_3_fu_339_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_26_fu_343_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_fu_353_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP1_V_4_fu_349_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_1_fu_353_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_26_fu_343_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_1_fu_353_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_22_i_fu_365_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal OP1_V_1_i_fu_372_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal t_V_fu_381_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_171_tr_i_fu_387_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_neg_i_fu_399_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_1984_i_fu_405_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1061_fu_391_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1985_i_fu_415_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1059_fu_377_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_i_fu_439_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_fu_429_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_i_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_452_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_i_fu_458_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1988_i_fu_474_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_14_fu_494_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal dRes_V_fu_501_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_26_i_fu_506_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_518_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal neg_mul_fu_542_p2 : STD_LOGIC_VECTOR (76 downto 0);
    signal tmp_1065_fu_547_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_v_v_fu_557_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_1067_fu_563_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1068_fu_573_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal neg_ti_fu_567_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_i_fu_589_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal p_cast2_i_fu_611_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_neg_i2_fu_605_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_146_fu_625_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_cast_i_fu_621_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1069_fu_597_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_fu_635_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_6_i_fu_639_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_17_fu_645_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1_i_fu_653_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_fu_657_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_2_i_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1074_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1075_fu_701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_149_fu_708_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_i_fu_714_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_i_fu_727_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal p_shl_cast_i_fu_734_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_19_fu_738_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_1990_i_fu_752_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_1076_fu_744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_20_fu_762_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_29_i_fu_770_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal dRes_V_1_fu_777_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1079_fu_809_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1078_fu_801_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i1_fu_819_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_i2_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_i1_fu_829_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal qb_assign_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_fu_852_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_22_fu_845_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sincosOut_M_real_V_fu_870_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sincosOut_M_imag_V_fu_877_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_895_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_901_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_901_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_1080_fu_917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_i_fu_925_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_3_fu_907_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_895_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_1081_fu_945_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_i_fu_953_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_29_fu_935_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_32_fu_957_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_31_fu_929_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_s_fu_972_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_518_ce : STD_LOGIC;
    signal grp_fu_895_ce : STD_LOGIC;
    signal grp_fu_901_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st36_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_965 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_bdd_992 : BOOLEAN;
    signal ap_sig_bdd_991 : BOOLEAN;

    component cmpy_complex_top_cordic_base IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        inputData_cartesian_M_real_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        inputData_cartesian_M_imag_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component cmpy_complex_top_cordic_base_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        inputData_phase_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component cmpy_complex_top_fxp_sqrt_20_2_20_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        in_val_V_read : IN STD_LOGIC_VECTOR (19 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (18 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component cmpy_complex_top_mul_40ns_38s_77_7 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (37 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (76 downto 0) );
    end component;


    component cmpy_complex_top_mul_19ns_20s_39_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component cmpy_complex_top_mul_mul_10s_18s_28_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;



begin
    grp_cmpy_complex_top_cordic_base_fu_238 : component cmpy_complex_top_cordic_base
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        inputData_cartesian_M_real_V_read => grp_cmpy_complex_top_cordic_base_fu_238_inputData_cartesian_M_real_V_read,
        inputData_cartesian_M_imag_V_read => grp_cmpy_complex_top_cordic_base_fu_238_inputData_cartesian_M_imag_V_read,
        ap_return => grp_cmpy_complex_top_cordic_base_fu_238_ap_return,
        ap_ce => grp_cmpy_complex_top_cordic_base_fu_238_ap_ce);

    grp_cmpy_complex_top_cordic_base_1_fu_244 : component cmpy_complex_top_cordic_base_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        inputData_phase_V_read => grp_cmpy_complex_top_cordic_base_1_fu_244_inputData_phase_V_read,
        ap_return_0 => grp_cmpy_complex_top_cordic_base_1_fu_244_ap_return_0,
        ap_return_1 => grp_cmpy_complex_top_cordic_base_1_fu_244_ap_return_1,
        ap_ce => grp_cmpy_complex_top_cordic_base_1_fu_244_ap_ce);

    grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249 : component cmpy_complex_top_fxp_sqrt_20_2_20_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_val_V_read => grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_in_val_V_read,
        ap_return => grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_return,
        ap_ce => grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_ce);

    cmpy_complex_top_mul_40ns_38s_77_7_U11 : component cmpy_complex_top_mul_40ns_38s_77_7
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 40,
        din1_WIDTH => 38,
        dout_WIDTH => 77)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_518_p0,
        din1 => tmp_26_i_fu_506_p3,
        ce => grp_fu_518_ce,
        dout => grp_fu_518_p2);

    cmpy_complex_top_mul_19ns_20s_39_3_U12 : component cmpy_complex_top_mul_19ns_20s_39_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_895_p0,
        din1 => sincosOut_M_imag_V_fu_877_p3,
        ce => grp_fu_895_ce,
        dout => grp_fu_895_p2);

    cmpy_complex_top_mul_19ns_20s_39_3_U13 : component cmpy_complex_top_mul_19ns_20s_39_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 19,
        din1_WIDTH => 20,
        dout_WIDTH => 39)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_901_p0,
        din1 => sincosOut_M_real_V_fu_870_p3,
        ce => grp_fu_901_ce,
        dout => grp_fu_901_p2);

    cmpy_complex_top_mul_mul_10s_18s_28_1_U14 : component cmpy_complex_top_mul_mul_10s_18s_28_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 18,
        dout_WIDTH => 28)
    port map (
        din0 => p_Val2_s_fu_972_p0,
        din1 => tmp_fu_273_p1,
        dout => p_Val2_s_fu_972_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_2)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_cmp_TREADY assign process. --
    ap_reg_ioackin_cmp_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_cmp_TREADY <= ap_const_logic_0;
            else
                if (ap_sig_bdd_991) then
                    if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                        ap_reg_ioackin_cmp_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_992) then 
                        ap_reg_ioackin_cmp_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (tmp_18_i_fu_262_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_63))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((tmp_18_i_fu_262_p2 = ap_const_lv1_0)) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_63)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (tmp_18_i_fu_262_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it23 assign process. --
    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it24 assign process. --
    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it25 assign process. --
    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it26 assign process. --
    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it27 assign process. --
    ap_reg_ppiten_pp0_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it28 assign process. --
    ap_reg_ppiten_pp0_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it29 assign process. --
    ap_reg_ppiten_pp0_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it30 assign process. --
    ap_reg_ppiten_pp0_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it31 assign process. --
    ap_reg_ppiten_pp0_it31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it32 assign process. --
    ap_reg_ppiten_pp0_it32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it33 assign process. --
    ap_reg_ppiten_pp0_it33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_63))) then 
                    ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- p_Val2_7_reg_227 assign process. --
    p_Val2_7_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((tmp_18_i_fu_262_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
                p_Val2_7_reg_227 <= x_fu_267_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_63))) then 
                p_Val2_7_reg_227 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_63))) then
                OP2_V_reg_984 <= OP2_V_fu_254_p1;
                nL_read_reg_979 <= nL_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33))))) then
                ap_reg_ppstg_p_2_i_reg_1028_pp0_it2 <= p_2_i_reg_1028;
                ap_reg_ppstg_p_2_i_reg_1028_pp0_it3 <= ap_reg_ppstg_p_2_i_reg_1028_pp0_it2;
                ap_reg_ppstg_p_2_i_reg_1028_pp0_it4 <= ap_reg_ppstg_p_2_i_reg_1028_pp0_it3;
                ap_reg_ppstg_p_2_i_reg_1028_pp0_it5 <= ap_reg_ppstg_p_2_i_reg_1028_pp0_it4;
                ap_reg_ppstg_p_2_i_reg_1028_pp0_it6 <= ap_reg_ppstg_p_2_i_reg_1028_pp0_it5;
                ap_reg_ppstg_p_2_i_reg_1028_pp0_it7 <= ap_reg_ppstg_p_2_i_reg_1028_pp0_it6;
                ap_reg_ppstg_p_2_i_reg_1028_pp0_it8 <= ap_reg_ppstg_p_2_i_reg_1028_pp0_it7;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it10 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it9;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it11 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it10;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it12 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it11;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it13 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it12;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it14 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it13;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it15 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it14;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it16 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it15;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it17 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it16;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it18 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it17;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it19 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it18;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it20 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it19;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it3 <= p_Val2_3_i_reg_1033;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it4 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it3;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it5 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it4;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it6 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it5;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it7 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it6;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it8 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it7;
                ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it9 <= ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it8;
                ap_reg_ppstg_tmp_1064_reg_1058_pp0_it12 <= tmp_1064_reg_1058;
                ap_reg_ppstg_tmp_1064_reg_1058_pp0_it13 <= ap_reg_ppstg_tmp_1064_reg_1058_pp0_it12;
                ap_reg_ppstg_tmp_1064_reg_1058_pp0_it14 <= ap_reg_ppstg_tmp_1064_reg_1058_pp0_it13;
                ap_reg_ppstg_tmp_1064_reg_1058_pp0_it15 <= ap_reg_ppstg_tmp_1064_reg_1058_pp0_it14;
                ap_reg_ppstg_tmp_1064_reg_1058_pp0_it16 <= ap_reg_ppstg_tmp_1064_reg_1058_pp0_it15;
                ap_reg_ppstg_tmp_1064_reg_1058_pp0_it17 <= ap_reg_ppstg_tmp_1064_reg_1058_pp0_it16;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it10 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it9;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it11 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it10;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it12 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it11;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it13 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it12;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it14 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it13;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it15 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it14;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it16 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it15;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it17 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it16;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it18 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it17;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it19 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it18;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it2 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it1;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it20 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it19;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it21 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it20;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it22 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it21;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it23 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it22;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it24 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it23;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it25 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it24;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it26 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it25;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it27 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it26;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it28 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it27;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it29 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it28;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it3 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it2;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it30 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it29;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it31 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it30;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it31;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it4 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it3;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it5 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it4;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it6 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it5;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it7 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it6;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it8 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it7;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it9 <= ap_reg_ppstg_tmp_18_i_reg_989_pp0_it8;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it12 <= xuout_V_i_reg_1064;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it13 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it12;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it14 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it13;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it15 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it14;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it16 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it15;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it17 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it16;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it18 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it17;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it19 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it18;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it20 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it19;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it21 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it20;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it22 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it21;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it23 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it22;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it24 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it23;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it25 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it24;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it26 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it25;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it27 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it26;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it28 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it27;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it29 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it28;
                ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it30 <= ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it29;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then
                ap_reg_ppstg_tmp_1058_reg_1008_pp0_it1 <= tmp_1058_reg_1008;
                ap_reg_ppstg_tmp_18_i_reg_989_pp0_it1 <= tmp_18_i_reg_989;
                tmp_18_i_reg_989 <= tmp_18_i_fu_262_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it16)))) then
                mul_reg_1069 <= grp_fu_518_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((tmp_18_i_reg_989 = ap_const_lv1_0)))) then
                p_2_i_reg_1028 <= p_2_i_fu_466_p3;
                tmp_1987_i_reg_1023 <= tmp_1987_i_fu_421_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it9)))) then
                p_Val2_13_reg_1048 <= refAtans_V_q0;
                tmp_1063_reg_1043 <= tmp_1063_fu_490_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it18)))) then
                p_Val2_16_reg_1084 <= p_Val2_16_fu_584_p2;
                tmp_1070_reg_1089 <= r_V_fu_657_p2(20 downto 20);
                tmp_1071_reg_1094 <= tmp_1071_fu_671_p1;
                tmp_1072_reg_1099 <= r_V_fu_657_p2(18 downto 18);
                tmp_1073_reg_1104 <= r_V_fu_657_p2(18 downto 18);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it21)))) then
                p_Val2_30_reg_1130 <= p_Val2_30_fu_856_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it1)))) then
                p_Val2_3_i_reg_1033 <= p_Val2_3_i_fu_481_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((tmp_18_i_fu_262_p2 = ap_const_lv1_0)) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then
                p_Val2_8_reg_998 <= p_Val2_s_fu_972_p2(26 downto 9);
                tmp_1057_reg_1003 <= tmp_1057_fu_290_p1;
                tmp_1058_reg_1008 <= tmp_1058_fu_294_p1;
                tmp_1989_i_reg_1013 <= p_Val2_s_fu_972_p2(13 downto 9);
                val_V_reg_1018 <= val_V_fu_359_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it19)))) then
                p_Val2_i5_reg_1110 <= p_Val2_i5_fu_722_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it20)))) then
                signbit_reg_1115 <= dRes_V_1_fu_777_p2(19 downto 19);
                tmp_1_i7_reg_1120 <= dRes_V_1_fu_777_p2(19 downto 5);
                tmp_7_i_reg_1125 <= tmp_7_i_fu_839_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it10)))) then
                tmp_1064_reg_1058 <= dRes_V_fu_501_p2(19 downto 19);
                xuout_V_i_reg_1064 <= grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_return;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it16)) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_1064_reg_1058_pp0_it16))) then
                tmp_1066_reg_1074 <= grp_fu_518_p2(76 downto 56);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it17)))) then
                tmp_145_reg_1079 <= tmp_145_fu_577_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it29)))) then
                xout_cartesian_M_imag_V_reg_1140 <= grp_cmpy_complex_top_cordic_base_1_fu_244_ap_return_1;
                xout_cartesian_M_real_V_reg_1135 <= grp_cmpy_complex_top_cordic_base_1_fu_244_ap_return_0;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_63, tmp_18_i_fu_262_p2, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it32, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_63)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it32)))) and not(((tmp_18_i_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it32))) or ((tmp_18_i_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st36_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_st36_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    OP1_V_1_i_fu_372_p2 <= std_logic_vector(unsigned(p_Val2_8_reg_998) + unsigned(tmp_22_i_fu_365_p3));
        OP1_V_3_fu_339_p1 <= std_logic_vector(resize(signed(s_M_real_V_fu_298_p1),20));

        OP1_V_4_fu_349_p1 <= std_logic_vector(resize(signed(s_M_imag_V_fu_302_p4),20));

    OP2_V_3_cast_fu_892_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_xuout_V_i_reg_1064_pp0_it30),39));
        OP2_V_fu_254_p1 <= std_logic_vector(resize(signed(factor_V_dout),28));


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st36_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st36_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_63 assign process. --
    ap_sig_bdd_63_assign_proc : process(ap_start, ap_done_reg, factor_V_empty_n, nL_empty_n)
    begin
                ap_sig_bdd_63 <= ((factor_V_empty_n = ap_const_logic_0) or (nL_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_75 assign process. --
    ap_sig_bdd_75_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_75 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_85 assign process. --
    ap_sig_bdd_85_assign_proc : process(prealign_V_TVALID, sig_TVALID, tmp_18_i_fu_262_p2)
    begin
                ap_sig_bdd_85 <= (((prealign_V_TVALID = ap_const_logic_0) and not((tmp_18_i_fu_262_p2 = ap_const_lv1_0))) or (not((tmp_18_i_fu_262_p2 = ap_const_lv1_0)) and (sig_TVALID = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_965 assign process. --
    ap_sig_bdd_965_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_965 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_991 assign process. --
    ap_sig_bdd_991_assign_proc : process(ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_reg_ppiten_pp0_it33)
    begin
                ap_sig_bdd_991 <= (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33));
    end process;


    -- ap_sig_bdd_992 assign process. --
    ap_sig_bdd_992_assign_proc : process(cmp_TREADY, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0)
    begin
                ap_sig_bdd_992 <= (not((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = cmp_TREADY));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_75)
    begin
        if (ap_sig_bdd_75) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st36_fsm_2 assign process. --
    ap_sig_cseq_ST_st36_fsm_2_assign_proc : process(ap_sig_bdd_965)
    begin
        if (ap_sig_bdd_965) then 
            ap_sig_cseq_ST_st36_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st36_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_cmp_TREADY assign process. --
    ap_sig_ioackin_cmp_TREADY_assign_proc : process(cmp_TREADY, ap_reg_ioackin_cmp_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_cmp_TREADY)) then 
            ap_sig_ioackin_cmp_TREADY <= cmp_TREADY;
        else 
            ap_sig_ioackin_cmp_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    cmp_TDATA <= (p_Val2_32_fu_957_p2 & p_Val2_31_fu_929_p2);

    -- cmp_TVALID assign process. --
    cmp_TVALID_assign_proc : process(ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_reg_ppiten_pp0_it33, ap_reg_ioackin_cmp_TREADY)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33) and not((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_0 = ap_reg_ioackin_cmp_TREADY))) then 
            cmp_TVALID <= ap_const_logic_1;
        else 
            cmp_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    dRes_V_1_fu_777_p2 <= std_logic_vector(unsigned(p_Val2_20_fu_762_p3) - unsigned(tmp_29_i_fu_770_p3));
    dRes_V_fu_501_p2 <= std_logic_vector(unsigned(p_Val2_13_reg_1048) - unsigned(p_Val2_14_fu_494_p3));

    -- factor_V_read assign process. --
    factor_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_63)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_63))) then 
            factor_V_read <= ap_const_logic_1;
        else 
            factor_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_cmpy_complex_top_cordic_base_1_fu_244_ap_ce assign process. --
    grp_cmpy_complex_top_cordic_base_1_fu_244_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            grp_cmpy_complex_top_cordic_base_1_fu_244_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_complex_top_cordic_base_1_fu_244_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cmpy_complex_top_cordic_base_1_fu_244_inputData_phase_V_read <= p_Val2_30_reg_1130;

    -- grp_cmpy_complex_top_cordic_base_fu_238_ap_ce assign process. --
    grp_cmpy_complex_top_cordic_base_fu_238_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            grp_cmpy_complex_top_cordic_base_fu_238_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_complex_top_cordic_base_fu_238_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cmpy_complex_top_cordic_base_fu_238_inputData_cartesian_M_imag_V_read <= (s_M_imag_V_fu_302_p4 & ap_const_lv5_0);
    grp_cmpy_complex_top_cordic_base_fu_238_inputData_cartesian_M_real_V_read <= (s_M_real_V_fu_298_p1 & ap_const_lv5_0);

    -- grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_ce assign process. --
    grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cmpy_complex_top_fxp_sqrt_20_2_20_2_s_fu_249_in_val_V_read <= val_V_reg_1018;

    -- grp_fu_518_ce assign process. --
    grp_fu_518_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            grp_fu_518_ce <= ap_const_logic_1;
        else 
            grp_fu_518_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_518_p0 <= ap_const_lv77_4A8E89B935(40 - 1 downto 0);

    -- grp_fu_895_ce assign process. --
    grp_fu_895_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            grp_fu_895_ce <= ap_const_logic_1;
        else 
            grp_fu_895_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_895_p0 <= OP2_V_3_cast_fu_892_p1(19 - 1 downto 0);

    -- grp_fu_901_ce assign process. --
    grp_fu_901_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            grp_fu_901_ce <= ap_const_logic_1;
        else 
            grp_fu_901_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_901_p0 <= OP2_V_3_cast_fu_892_p1(19 - 1 downto 0);
    i_op_assign_cast_i_fu_258_p1 <= std_logic_vector(resize(unsigned(p_Val2_7_reg_227),32));

    -- nL_read assign process. --
    nL_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_63)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_63))) then 
            nL_read <= ap_const_logic_1;
        else 
            nL_read <= ap_const_logic_0;
        end if; 
    end process;

    neg_mul_fu_542_p2 <= std_logic_vector(unsigned(ap_const_lv77_0) - unsigned(mul_reg_1069));
    neg_ti_fu_567_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(tmp_1067_fu_563_p1));
    p_2_i_fu_466_p3 <= 
        p_i_fu_458_p3 when (tmp_1061_fu_391_p3(0) = '1') else 
        ret_V_fu_429_p4;
    p_Result_7_i_fu_439_p3 <= (tmp_1989_i_reg_1013 & ap_const_lv1_0);
    p_Val2_14_fu_494_p3 <= (tmp_1063_reg_1043 & ap_const_lv5_0);
    p_Val2_16_fu_584_p2 <= (tmp_145_reg_1079 xor ap_const_lv20_80000);
    p_Val2_17_fu_645_p3 <= 
        tmp_5_i_fu_635_p1 when (tmp_1069_fu_597_p3(0) = '1') else 
        tmp_6_i_fu_639_p2;
    p_Val2_19_fu_738_p2 <= std_logic_vector(unsigned(ap_const_lv40_0) - unsigned(p_shl_cast_i_fu_734_p1));
    p_Val2_1_fu_353_p0 <= OP1_V_4_fu_349_p1(10 - 1 downto 0);
    p_Val2_1_fu_353_p1 <= OP1_V_4_fu_349_p1(10 - 1 downto 0);
    p_Val2_1_fu_353_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(p_Val2_1_fu_353_p0) * signed(p_Val2_1_fu_353_p1))), 20));
    p_Val2_20_fu_762_p3 <= (tmp_1990_i_fu_752_p4 & tmp_1076_fu_744_p3);
        p_Val2_22_fu_845_p1 <= std_logic_vector(resize(signed(tmp_1_i7_reg_1120),16));

    p_Val2_26_fu_343_p0 <= OP1_V_3_fu_339_p1(10 - 1 downto 0);
    p_Val2_26_fu_343_p1 <= OP1_V_3_fu_339_p1(10 - 1 downto 0);
    p_Val2_26_fu_343_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(p_Val2_26_fu_343_p0) * signed(p_Val2_26_fu_343_p1))), 20));
    p_Val2_29_fu_935_p4 <= grp_fu_895_p2(37 downto 18);
    p_Val2_30_fu_856_p2 <= std_logic_vector(unsigned(tmp_8_i_fu_852_p1) + unsigned(p_Val2_22_fu_845_p1));
    p_Val2_31_fu_929_p2 <= std_logic_vector(unsigned(tmp_31_i_fu_925_p1) + unsigned(p_Val2_3_fu_907_p4));
    p_Val2_32_fu_957_p2 <= std_logic_vector(unsigned(tmp_33_i_fu_953_p1) + unsigned(p_Val2_29_fu_935_p4));
    p_Val2_3_fu_907_p4 <= grp_fu_901_p2(37 downto 18);
    p_Val2_3_i_fu_481_p2 <= std_logic_vector(unsigned(tmp_1987_i_reg_1023) - unsigned(tmp_1988_i_fu_474_p3));
    p_Val2_9_i_fu_714_p3 <= (tmp_149_fu_708_p3 & ap_const_lv19_0);
    p_Val2_i5_fu_722_p2 <= std_logic_vector(unsigned(p_Val2_16_reg_1084) - unsigned(p_Val2_9_i_fu_714_p3));
    p_Val2_s_fu_972_p0 <= OP2_V_reg_984(10 - 1 downto 0);
    p_cast2_i_fu_611_p4 <= p_Val2_16_fu_584_p2(19 downto 1);
    p_cast_i_fu_621_p1 <= std_logic_vector(resize(unsigned(p_cast2_i_fu_611_p4),20));
    p_i_fu_458_p3 <= 
        ret_V_fu_429_p4 when (tmp_23_i_fu_446_p2(0) = '1') else 
        ret_V_1_fu_452_p2;
    p_neg_i2_fu_605_p2 <= std_logic_vector(unsigned(ap_const_lv38_0) - unsigned(tmp_i_fu_589_p3));
    p_neg_i_fu_399_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(tmp_171_tr_i_fu_387_p1));
        p_shl_cast_i_fu_734_p1 <= std_logic_vector(resize(signed(p_shl_i_fu_727_p3),40));

    p_shl_i_fu_727_p3 <= (p_Val2_i5_reg_1110 & ap_const_lv19_0);
    p_v_v_fu_557_p3 <= 
        tmp_1065_fu_547_p4 when (ap_reg_ppstg_tmp_1064_reg_1058_pp0_it17(0) = '1') else 
        tmp_1066_reg_1074;

    -- prealign_V_TREADY assign process. --
    prealign_V_TREADY_assign_proc : process(tmp_18_i_fu_262_p2, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((tmp_18_i_fu_262_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            prealign_V_TREADY <= ap_const_logic_1;
        else 
            prealign_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    qb_assign_fu_848_p2 <= (tmp_7_i_reg_1125 and signbit_reg_1115);
    r_V_fu_657_p2 <= std_logic_vector(unsigned(ap_const_lv21_20000) + unsigned(tmp_1_i_fu_653_p1));
    refAtans_V_address0 <= tmp_24_i_fu_486_p1(11 - 1 downto 0);

    -- refAtans_V_ce0 assign process. --
    refAtans_V_ce0_assign_proc : process(ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            refAtans_V_ce0 <= ap_const_logic_1;
        else 
            refAtans_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_452_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(ret_V_fu_429_p4));
    ret_V_fu_429_p4 <= OP1_V_1_i_fu_372_p2(16 downto 5);
    s_M_imag_V_fu_302_p4 <= sig_TDATA(19 downto 10);
    s_M_real_V_fu_298_p1 <= sig_TDATA(10 - 1 downto 0);

    -- sig_TREADY assign process. --
    sig_TREADY_assign_proc : process(tmp_18_i_fu_262_p2, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_85, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32, ap_sig_ioackin_cmp_TREADY, ap_reg_ppiten_pp0_it33)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((tmp_18_i_fu_262_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_85 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_18_i_reg_989_pp0_it32)) and (ap_const_logic_0 = ap_sig_ioackin_cmp_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it33)))))) then 
            sig_TREADY <= ap_const_logic_1;
        else 
            sig_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    sincosOut_M_imag_V_fu_877_p3 <= (xout_cartesian_M_imag_V_reg_1140 & ap_const_lv4_0);
    sincosOut_M_real_V_fu_870_p3 <= (xout_cartesian_M_real_V_reg_1135 & ap_const_lv4_0);
    t_V_fu_381_p2 <= std_logic_vector(shift_left(unsigned(OP1_V_1_i_fu_372_p2),to_integer(unsigned('0' & ap_const_lv18_1(18-1 downto 0)))));
    tmp_1057_fu_290_p1 <= p_Val2_7_reg_227(12 - 1 downto 0);
    tmp_1058_fu_294_p1 <= p_Val2_7_reg_227(2 - 1 downto 0);
    tmp_1059_fu_377_p1 <= OP1_V_1_i_fu_372_p2(8 - 1 downto 0);
    tmp_1061_fu_391_p3 <= OP1_V_1_i_fu_372_p2(16 downto 16);
    tmp_1063_fu_490_p1 <= grp_cmpy_complex_top_cordic_base_fu_238_ap_return(15 - 1 downto 0);
    tmp_1065_fu_547_p4 <= neg_mul_fu_542_p2(76 downto 56);
    tmp_1067_fu_563_p1 <= p_v_v_fu_557_p3(20 - 1 downto 0);
    tmp_1068_fu_573_p1 <= p_v_v_fu_557_p3(20 - 1 downto 0);
    tmp_1069_fu_597_p3 <= p_Val2_16_fu_584_p2(19 downto 19);
    tmp_1071_fu_671_p1 <= r_V_fu_657_p2(18 - 1 downto 0);
    tmp_1074_fu_696_p2 <= (tmp_1072_reg_1099 xor ap_const_lv1_1);
    tmp_1075_fu_701_p3 <= 
        tmp_1073_reg_1104 when (tmp_2_i_fu_691_p2(0) = '1') else 
        tmp_1074_fu_696_p2;
    tmp_1076_fu_744_p3 <= p_Val2_19_fu_738_p2(17 downto 17);
    tmp_1078_fu_801_p3 <= dRes_V_1_fu_777_p2(4 downto 4);
    tmp_1079_fu_809_p1 <= dRes_V_1_fu_777_p2(1 - 1 downto 0);
    tmp_1080_fu_917_p3 <= grp_fu_901_p2(17 downto 17);
    tmp_1081_fu_945_p3 <= grp_fu_895_p2(17 downto 17);
    tmp_145_fu_577_p3 <= 
        tmp_1068_fu_573_p1 when (ap_reg_ppstg_tmp_1064_reg_1058_pp0_it17(0) = '1') else 
        neg_ti_fu_567_p2;
    tmp_146_fu_625_p4 <= p_neg_i2_fu_605_p2(37 downto 19);
    tmp_149_fu_708_p3 <= 
        tmp_1075_fu_701_p3 when (tmp_1070_reg_1089(0) = '1') else 
        tmp_1073_reg_1104;
    tmp_171_tr_i_fu_387_p1 <= std_logic_vector(resize(unsigned(t_V_fu_381_p2),19));
    tmp_18_i_fu_262_p2 <= "1" when (signed(i_op_assign_cast_i_fu_258_p1) < signed(nL_read_reg_979)) else "0";
    tmp_1984_i_fu_405_p4 <= p_neg_i_fu_399_p2(8 downto 1);
    tmp_1985_i_fu_415_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_1984_i_fu_405_p4));
    tmp_1987_i_fu_421_p3 <= 
        tmp_1985_i_fu_415_p2 when (tmp_1061_fu_391_p3(0) = '1') else 
        tmp_1059_fu_377_p1;
    tmp_1988_i_fu_474_p3 <= (ap_reg_ppstg_tmp_1058_reg_1008_pp0_it1 & ap_const_lv6_0);
    tmp_1990_i_fu_752_p4 <= p_Val2_19_fu_738_p2(37 downto 19);
        tmp_1_i_fu_653_p1 <= std_logic_vector(resize(signed(p_Val2_17_fu_645_p3),21));

    tmp_22_i_fu_365_p3 <= (tmp_1057_reg_1003 & ap_const_lv6_0);
    tmp_23_i_fu_446_p2 <= "1" when (p_Result_7_i_fu_439_p3 = ap_const_lv6_0) else "0";
        tmp_24_i_fu_486_p1 <= std_logic_vector(resize(signed(ap_reg_ppstg_p_2_i_reg_1028_pp0_it8),64));

    tmp_26_i_fu_506_p3 <= (dRes_V_fu_501_p2 & ap_const_lv18_0);
    tmp_29_i_fu_770_p3 <= (ap_reg_ppstg_p_Val2_3_i_reg_1033_pp0_it20 & ap_const_lv12_0);
    tmp_2_i_fu_691_p2 <= "1" when (tmp_1071_reg_1094 = ap_const_lv18_0) else "0";
    tmp_31_i_fu_925_p1 <= std_logic_vector(resize(unsigned(tmp_1080_fu_917_p3),20));
    tmp_33_i_fu_953_p1 <= std_logic_vector(resize(unsigned(tmp_1081_fu_945_p3),20));
    tmp_3_i2_fu_813_p2 <= (tmp_1079_fu_809_p1 or tmp_1078_fu_801_p3);
    tmp_4_i1_fu_819_p4 <= dRes_V_1_fu_777_p2(3 downto 1);
    tmp_5_i_fu_635_p1 <= std_logic_vector(resize(unsigned(tmp_146_fu_625_p4),20));
    tmp_6_i1_fu_829_p4 <= ((ap_const_lv16_0 & tmp_4_i1_fu_819_p4) & tmp_3_i2_fu_813_p2);
    tmp_6_i_fu_639_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(p_cast_i_fu_621_p1));
    tmp_7_i_fu_839_p2 <= "0" when (tmp_6_i1_fu_829_p4 = ap_const_lv20_0) else "1";
    tmp_8_i_fu_852_p1 <= std_logic_vector(resize(unsigned(qb_assign_fu_848_p2),16));
    tmp_fu_273_p1 <= prealign_V_TDATA(18 - 1 downto 0);
    tmp_i_fu_589_p3 <= (p_Val2_16_fu_584_p2 & ap_const_lv18_0);
    val_V_fu_359_p2 <= std_logic_vector(unsigned(p_Val2_26_fu_343_p2) + unsigned(p_Val2_1_fu_353_p2));
    x_fu_267_p2 <= std_logic_vector(unsigned(p_Val2_7_reg_227) + unsigned(ap_const_lv31_1));
end behav;
