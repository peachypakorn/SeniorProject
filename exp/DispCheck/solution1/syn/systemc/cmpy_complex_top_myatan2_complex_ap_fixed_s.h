// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _cmpy_complex_top_myatan2_complex_ap_fixed_s_HH_
#define _cmpy_complex_top_myatan2_complex_ap_fixed_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cmpy_complex_top_cordic_base.h"

namespace ap_rtl {

struct cmpy_complex_top_myatan2_complex_ap_fixed_s : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > xin_TVALID;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<24> > xin_TDATA;
    sc_out< sc_logic > xin_TREADY;
    sc_out< sc_logic > xin_TDATA_blk_n;
    sc_out< sc_lv<20> > ap_return;


    // Module declarations
    cmpy_complex_top_myatan2_complex_ap_fixed_s(sc_module_name name);
    SC_HAS_PROCESS(cmpy_complex_top_myatan2_complex_ap_fixed_s);

    ~cmpy_complex_top_myatan2_complex_ap_fixed_s();

    sc_trace_file* mVcdFile;

    cmpy_complex_top_cordic_base* grp_cmpy_complex_top_cordic_base_fu_32;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_0;
    sc_signal< bool > ap_sig_bdd_19;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it7;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it8;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it9;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it10;
    sc_signal< bool > ap_sig_bdd_74;
    sc_signal< sc_lv<15> > grp_cmpy_complex_top_cordic_base_fu_32_inputData_cartesian_M_real_V_read;
    sc_signal< sc_lv<15> > grp_cmpy_complex_top_cordic_base_fu_32_inputData_cartesian_M_imag_V_read;
    sc_signal< sc_lv<16> > grp_cmpy_complex_top_cordic_base_fu_32_ap_return;
    sc_signal< sc_logic > grp_cmpy_complex_top_cordic_base_fu_32_ap_ce;
    sc_signal< sc_lv<10> > tmp_fu_38_p1;
    sc_signal< sc_lv<10> > tmp_1_fu_51_p4;
    sc_signal< sc_lv<15> > tmp_2_fu_70_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_sig_pprstidle_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_pp0_stg0_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_13;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_ppiten_pp0_it0();
    void thread_ap_return();
    void thread_ap_sig_bdd_19();
    void thread_ap_sig_bdd_74();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_0();
    void thread_ap_sig_pprstidle_pp0();
    void thread_grp_cmpy_complex_top_cordic_base_fu_32_ap_ce();
    void thread_grp_cmpy_complex_top_cordic_base_fu_32_inputData_cartesian_M_imag_V_read();
    void thread_grp_cmpy_complex_top_cordic_base_fu_32_inputData_cartesian_M_real_V_read();
    void thread_tmp_1_fu_51_p4();
    void thread_tmp_2_fu_70_p1();
    void thread_tmp_fu_38_p1();
    void thread_xin_TDATA_blk_n();
    void thread_xin_TREADY();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
