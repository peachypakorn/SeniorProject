-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cmpy_complex_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    sig_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    sigRef_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    prealign_V_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    cmp_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
    nL : IN STD_LOGIC_VECTOR (31 downto 0);
    nLExp : IN STD_LOGIC_VECTOR (31 downto 0);
    nLen : IN STD_LOGIC_VECTOR (31 downto 0);
    factor_V : IN STD_LOGIC_VECTOR (9 downto 0);
    sigRef_TVALID : IN STD_LOGIC;
    sigRef_TREADY : OUT STD_LOGIC;
    prealign_V_TVALID : IN STD_LOGIC;
    prealign_V_TREADY : OUT STD_LOGIC;
    sig_TVALID : IN STD_LOGIC;
    sig_TREADY : OUT STD_LOGIC;
    cmp_TVALID : OUT STD_LOGIC;
    cmp_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC );
end;


architecture behav of cmpy_complex_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cmpy_complex_top,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.700000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=6,HLS_SYN_DSP=12,HLS_SYN_FF=2843,HLS_SYN_LUT=8136}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal refAtans_V_i_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal refAtans_V_i_ce0 : STD_LOGIC;
    signal refAtans_V_i_we0 : STD_LOGIC;
    signal refAtans_V_i_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal refAtans_V_i_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal refAtans_V_t_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal refAtans_V_t_ce0 : STD_LOGIC;
    signal refAtans_V_t_we0 : STD_LOGIC;
    signal refAtans_V_t_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal refAtans_V_t_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal refAtans_V_U_ap_dummy_ce : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_ap_start : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_ap_done : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_ap_continue : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_ap_idle : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_ap_ready : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_nL : STD_LOGIC_VECTOR (31 downto 0);
    signal cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_ce0 : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_we0 : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_d0 : STD_LOGIC_VECTOR (19 downto 0);
    signal cmpy_complex_top_Loop_1_proc143_U0_sigRef_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal cmpy_complex_top_Loop_1_proc143_U0_sigRef_TVALID : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_sigRef_TREADY : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_factor_V : STD_LOGIC_VECTOR (9 downto 0);
    signal cmpy_complex_top_Loop_1_proc143_U0_nL_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal cmpy_complex_top_Loop_1_proc143_U0_nL_out_full_n : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_nL_out_write : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_full_n : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_write : STD_LOGIC;
    signal ap_chn_write_cmpy_complex_top_Loop_1_proc143_U0_refAtans_V : STD_LOGIC;
    signal cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_pipo_status : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_ap_start : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_ap_done : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_ap_continue : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_ap_idle : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_ap_ready : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_factor_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal cmpy_complex_top_Loop_2_proc_U0_factor_V_empty_n : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_factor_V_read : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_nL_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cmpy_complex_top_Loop_2_proc_U0_nL_empty_n : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_nL_read : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_refAtans_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmpy_complex_top_Loop_2_proc_U0_refAtans_V_ce0 : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_refAtans_V_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal cmpy_complex_top_Loop_2_proc_U0_prealign_V_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal cmpy_complex_top_Loop_2_proc_U0_prealign_V_TVALID : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_prealign_V_TREADY : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_sig_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal cmpy_complex_top_Loop_2_proc_U0_sig_TVALID : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_sig_TREADY : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_cmp_TDATA : STD_LOGIC_VECTOR (39 downto 0);
    signal cmpy_complex_top_Loop_2_proc_U0_cmp_TVALID : STD_LOGIC;
    signal cmpy_complex_top_Loop_2_proc_U0_cmp_TREADY : STD_LOGIC;
    signal ap_sig_hs_continue : STD_LOGIC;
    signal refAtans_V_i_full_n : STD_LOGIC;
    signal refAtans_V_i_write : STD_LOGIC;
    signal refAtans_V_t_empty_n : STD_LOGIC;
    signal refAtans_V_t_read : STD_LOGIC;
    signal nL_channel_U_ap_dummy_ce : STD_LOGIC;
    signal nL_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal nL_channel_full_n : STD_LOGIC;
    signal nL_channel_write : STD_LOGIC;
    signal nL_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal nL_channel_empty_n : STD_LOGIC;
    signal nL_channel_read : STD_LOGIC;
    signal factor_V_channel_U_ap_dummy_ce : STD_LOGIC;
    signal factor_V_channel_din : STD_LOGIC_VECTOR (9 downto 0);
    signal factor_V_channel_full_n : STD_LOGIC;
    signal factor_V_channel_write : STD_LOGIC;
    signal factor_V_channel_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal factor_V_channel_empty_n : STD_LOGIC;
    signal factor_V_channel_read : STD_LOGIC;
    signal ap_reg_procdone_cmpy_complex_top_Loop_1_proc143_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_reg_procdone_cmpy_complex_top_Loop_2_proc_U0 : STD_LOGIC := '0';
    signal ap_CS : STD_LOGIC;
    signal ap_sig_top_allready : STD_LOGIC;
    signal ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sig_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sig_start_in_cmpy_complex_top_Loop_2_proc_U0_ap_start : STD_LOGIC;
    signal ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sig_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready : STD_LOGIC;
    signal ap_sig_start_in_cmpy_complex_top_Loop_1_proc143_U0_ap_start : STD_LOGIC;

    component cmpy_complex_top_Loop_1_proc143 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nL : IN STD_LOGIC_VECTOR (31 downto 0);
        refAtans_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        refAtans_V_ce0 : OUT STD_LOGIC;
        refAtans_V_we0 : OUT STD_LOGIC;
        refAtans_V_d0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        sigRef_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        sigRef_TVALID : IN STD_LOGIC;
        sigRef_TREADY : OUT STD_LOGIC;
        factor_V : IN STD_LOGIC_VECTOR (9 downto 0);
        nL_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        nL_out_full_n : IN STD_LOGIC;
        nL_out_write : OUT STD_LOGIC;
        factor_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        factor_V_out_full_n : IN STD_LOGIC;
        factor_V_out_write : OUT STD_LOGIC );
    end component;


    component cmpy_complex_top_Loop_2_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        factor_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        factor_V_empty_n : IN STD_LOGIC;
        factor_V_read : OUT STD_LOGIC;
        nL_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        nL_empty_n : IN STD_LOGIC;
        nL_read : OUT STD_LOGIC;
        refAtans_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        refAtans_V_ce0 : OUT STD_LOGIC;
        refAtans_V_q0 : IN STD_LOGIC_VECTOR (19 downto 0);
        prealign_V_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        prealign_V_TVALID : IN STD_LOGIC;
        prealign_V_TREADY : OUT STD_LOGIC;
        sig_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        sig_TVALID : IN STD_LOGIC;
        sig_TREADY : OUT STD_LOGIC;
        cmp_TDATA : OUT STD_LOGIC_VECTOR (39 downto 0);
        cmp_TVALID : OUT STD_LOGIC;
        cmp_TREADY : IN STD_LOGIC );
    end component;


    component cmpy_complex_top_refAtans_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (19 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (19 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component FIFO_cmpy_complex_top_nL_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_cmpy_complex_top_factor_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    refAtans_V_U : component cmpy_complex_top_refAtans_V
    generic map (
        DataWidth => 20,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => refAtans_V_i_address0,
        i_ce0 => refAtans_V_i_ce0,
        i_we0 => refAtans_V_i_we0,
        i_d0 => refAtans_V_i_d0,
        i_q0 => refAtans_V_i_q0,
        t_address0 => refAtans_V_t_address0,
        t_ce0 => refAtans_V_t_ce0,
        t_we0 => refAtans_V_t_we0,
        t_d0 => refAtans_V_t_d0,
        t_q0 => refAtans_V_t_q0,
        i_ce => refAtans_V_U_ap_dummy_ce,
        t_ce => refAtans_V_U_ap_dummy_ce,
        i_full_n => refAtans_V_i_full_n,
        i_write => refAtans_V_i_write,
        t_empty_n => refAtans_V_t_empty_n,
        t_read => refAtans_V_t_read);

    cmpy_complex_top_Loop_1_proc143_U0 : component cmpy_complex_top_Loop_1_proc143
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => cmpy_complex_top_Loop_1_proc143_U0_ap_start,
        ap_done => cmpy_complex_top_Loop_1_proc143_U0_ap_done,
        ap_continue => cmpy_complex_top_Loop_1_proc143_U0_ap_continue,
        ap_idle => cmpy_complex_top_Loop_1_proc143_U0_ap_idle,
        ap_ready => cmpy_complex_top_Loop_1_proc143_U0_ap_ready,
        nL => cmpy_complex_top_Loop_1_proc143_U0_nL,
        refAtans_V_address0 => cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_address0,
        refAtans_V_ce0 => cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_ce0,
        refAtans_V_we0 => cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_we0,
        refAtans_V_d0 => cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_d0,
        sigRef_TDATA => cmpy_complex_top_Loop_1_proc143_U0_sigRef_TDATA,
        sigRef_TVALID => cmpy_complex_top_Loop_1_proc143_U0_sigRef_TVALID,
        sigRef_TREADY => cmpy_complex_top_Loop_1_proc143_U0_sigRef_TREADY,
        factor_V => cmpy_complex_top_Loop_1_proc143_U0_factor_V,
        nL_out_din => cmpy_complex_top_Loop_1_proc143_U0_nL_out_din,
        nL_out_full_n => cmpy_complex_top_Loop_1_proc143_U0_nL_out_full_n,
        nL_out_write => cmpy_complex_top_Loop_1_proc143_U0_nL_out_write,
        factor_V_out_din => cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_din,
        factor_V_out_full_n => cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_full_n,
        factor_V_out_write => cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_write);

    cmpy_complex_top_Loop_2_proc_U0 : component cmpy_complex_top_Loop_2_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => cmpy_complex_top_Loop_2_proc_U0_ap_start,
        ap_done => cmpy_complex_top_Loop_2_proc_U0_ap_done,
        ap_continue => cmpy_complex_top_Loop_2_proc_U0_ap_continue,
        ap_idle => cmpy_complex_top_Loop_2_proc_U0_ap_idle,
        ap_ready => cmpy_complex_top_Loop_2_proc_U0_ap_ready,
        factor_V_dout => cmpy_complex_top_Loop_2_proc_U0_factor_V_dout,
        factor_V_empty_n => cmpy_complex_top_Loop_2_proc_U0_factor_V_empty_n,
        factor_V_read => cmpy_complex_top_Loop_2_proc_U0_factor_V_read,
        nL_dout => cmpy_complex_top_Loop_2_proc_U0_nL_dout,
        nL_empty_n => cmpy_complex_top_Loop_2_proc_U0_nL_empty_n,
        nL_read => cmpy_complex_top_Loop_2_proc_U0_nL_read,
        refAtans_V_address0 => cmpy_complex_top_Loop_2_proc_U0_refAtans_V_address0,
        refAtans_V_ce0 => cmpy_complex_top_Loop_2_proc_U0_refAtans_V_ce0,
        refAtans_V_q0 => cmpy_complex_top_Loop_2_proc_U0_refAtans_V_q0,
        prealign_V_TDATA => cmpy_complex_top_Loop_2_proc_U0_prealign_V_TDATA,
        prealign_V_TVALID => cmpy_complex_top_Loop_2_proc_U0_prealign_V_TVALID,
        prealign_V_TREADY => cmpy_complex_top_Loop_2_proc_U0_prealign_V_TREADY,
        sig_TDATA => cmpy_complex_top_Loop_2_proc_U0_sig_TDATA,
        sig_TVALID => cmpy_complex_top_Loop_2_proc_U0_sig_TVALID,
        sig_TREADY => cmpy_complex_top_Loop_2_proc_U0_sig_TREADY,
        cmp_TDATA => cmpy_complex_top_Loop_2_proc_U0_cmp_TDATA,
        cmp_TVALID => cmpy_complex_top_Loop_2_proc_U0_cmp_TVALID,
        cmp_TREADY => cmpy_complex_top_Loop_2_proc_U0_cmp_TREADY);

    nL_channel_U : component FIFO_cmpy_complex_top_nL_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => nL_channel_U_ap_dummy_ce,
        if_write_ce => nL_channel_U_ap_dummy_ce,
        if_din => nL_channel_din,
        if_full_n => nL_channel_full_n,
        if_write => nL_channel_write,
        if_dout => nL_channel_dout,
        if_empty_n => nL_channel_empty_n,
        if_read => nL_channel_read);

    factor_V_channel_U : component FIFO_cmpy_complex_top_factor_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => factor_V_channel_U_ap_dummy_ce,
        if_write_ce => factor_V_channel_U_ap_dummy_ce,
        if_din => factor_V_channel_din,
        if_full_n => factor_V_channel_full_n,
        if_write => factor_V_channel_write,
        if_dout => factor_V_channel_dout,
        if_empty_n => factor_V_channel_empty_n,
        if_read => factor_V_channel_read);





    -- ap_reg_procdone_cmpy_complex_top_Loop_1_proc143_U0 assign process. --
    ap_reg_procdone_cmpy_complex_top_Loop_1_proc143_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_cmpy_complex_top_Loop_1_proc143_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_cmpy_complex_top_Loop_1_proc143_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = cmpy_complex_top_Loop_1_proc143_U0_ap_done)) then 
                    ap_reg_procdone_cmpy_complex_top_Loop_1_proc143_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_cmpy_complex_top_Loop_2_proc_U0 assign process. --
    ap_reg_procdone_cmpy_complex_top_Loop_2_proc_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_procdone_cmpy_complex_top_Loop_2_proc_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_cmpy_complex_top_Loop_2_proc_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = cmpy_complex_top_Loop_2_proc_U0_ap_done)) then 
                    ap_reg_procdone_cmpy_complex_top_Loop_2_proc_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready assign process. --
    ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_top_allready))) then 
                    ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = cmpy_complex_top_Loop_1_proc143_U0_ap_ready)) then 
                    ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready assign process. --
    ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_top_allready))) then 
                    ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = cmpy_complex_top_Loop_2_proc_U0_ap_ready)) then 
                    ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;
    ap_chn_write_cmpy_complex_top_Loop_1_proc143_U0_refAtans_V <= cmpy_complex_top_Loop_1_proc143_U0_ap_done;
    ap_done <= ap_sig_hs_done;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(cmpy_complex_top_Loop_1_proc143_U0_ap_idle, cmpy_complex_top_Loop_2_proc_U0_ap_idle, refAtans_V_t_empty_n)
    begin
        if (((ap_const_logic_1 = cmpy_complex_top_Loop_1_proc143_U0_ap_idle) and (ap_const_logic_1 = cmpy_complex_top_Loop_2_proc_U0_ap_idle) and (refAtans_V_t_empty_n = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_sig_top_allready;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_1;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(cmpy_complex_top_Loop_2_proc_U0_ap_done)
    begin
        if ((ap_const_logic_1 = cmpy_complex_top_Loop_2_proc_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready assign process. --
    ap_sig_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready_assign_proc : process(cmpy_complex_top_Loop_1_proc143_U0_ap_ready, ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready)) then 
            ap_sig_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready <= cmpy_complex_top_Loop_1_proc143_U0_ap_ready;
        else 
            ap_sig_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready assign process. --
    ap_sig_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready_assign_proc : process(cmpy_complex_top_Loop_2_proc_U0_ap_ready, ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready)) then 
            ap_sig_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready <= cmpy_complex_top_Loop_2_proc_U0_ap_ready;
        else 
            ap_sig_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_start_in_cmpy_complex_top_Loop_1_proc143_U0_ap_start assign process. --
    ap_sig_start_in_cmpy_complex_top_Loop_1_proc143_U0_ap_start_assign_proc : process(ap_start, ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_0 = ap_reg_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready))) then 
            ap_sig_start_in_cmpy_complex_top_Loop_1_proc143_U0_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_cmpy_complex_top_Loop_1_proc143_U0_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_start_in_cmpy_complex_top_Loop_2_proc_U0_ap_start assign process. --
    ap_sig_start_in_cmpy_complex_top_Loop_2_proc_U0_ap_start_assign_proc : process(ap_start, ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready)
    begin
        if (((ap_const_logic_0 = ap_reg_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready) and (ap_const_logic_1 = ap_start))) then 
            ap_sig_start_in_cmpy_complex_top_Loop_2_proc_U0_ap_start <= ap_const_logic_1;
        else 
            ap_sig_start_in_cmpy_complex_top_Loop_2_proc_U0_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_top_allready assign process. --
    ap_sig_top_allready_assign_proc : process(ap_sig_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready, ap_sig_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready)
    begin
        if (((ap_const_logic_1 = ap_sig_ready_cmpy_complex_top_Loop_2_proc_U0_ap_ready) and (ap_const_logic_1 = ap_sig_ready_cmpy_complex_top_Loop_1_proc143_U0_ap_ready))) then 
            ap_sig_top_allready <= ap_const_logic_1;
        else 
            ap_sig_top_allready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_TDATA <= cmpy_complex_top_Loop_2_proc_U0_cmp_TDATA;
    cmp_TVALID <= cmpy_complex_top_Loop_2_proc_U0_cmp_TVALID;
    cmpy_complex_top_Loop_1_proc143_U0_ap_continue <= cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_pipo_status;
    cmpy_complex_top_Loop_1_proc143_U0_ap_start <= ap_sig_start_in_cmpy_complex_top_Loop_1_proc143_U0_ap_start;
    cmpy_complex_top_Loop_1_proc143_U0_factor_V <= factor_V;
    cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_full_n <= factor_V_channel_full_n;
    cmpy_complex_top_Loop_1_proc143_U0_nL <= nL;
    cmpy_complex_top_Loop_1_proc143_U0_nL_out_full_n <= nL_channel_full_n;
    cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_pipo_status <= refAtans_V_i_full_n;
    cmpy_complex_top_Loop_1_proc143_U0_sigRef_TDATA <= sigRef_TDATA;
    cmpy_complex_top_Loop_1_proc143_U0_sigRef_TVALID <= sigRef_TVALID;
    cmpy_complex_top_Loop_2_proc_U0_ap_continue <= ap_sig_hs_continue;
    cmpy_complex_top_Loop_2_proc_U0_ap_start <= (refAtans_V_t_empty_n and ap_sig_start_in_cmpy_complex_top_Loop_2_proc_U0_ap_start);
    cmpy_complex_top_Loop_2_proc_U0_cmp_TREADY <= cmp_TREADY;
    cmpy_complex_top_Loop_2_proc_U0_factor_V_dout <= factor_V_channel_dout;
    cmpy_complex_top_Loop_2_proc_U0_factor_V_empty_n <= factor_V_channel_empty_n;
    cmpy_complex_top_Loop_2_proc_U0_nL_dout <= nL_channel_dout;
    cmpy_complex_top_Loop_2_proc_U0_nL_empty_n <= nL_channel_empty_n;
    cmpy_complex_top_Loop_2_proc_U0_prealign_V_TDATA <= prealign_V_TDATA;
    cmpy_complex_top_Loop_2_proc_U0_prealign_V_TVALID <= prealign_V_TVALID;
    cmpy_complex_top_Loop_2_proc_U0_refAtans_V_q0 <= refAtans_V_t_q0;
    cmpy_complex_top_Loop_2_proc_U0_sig_TDATA <= sig_TDATA;
    cmpy_complex_top_Loop_2_proc_U0_sig_TVALID <= sig_TVALID;
    factor_V_channel_U_ap_dummy_ce <= ap_const_logic_1;
    factor_V_channel_din <= cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_din;
    factor_V_channel_read <= cmpy_complex_top_Loop_2_proc_U0_factor_V_read;
    factor_V_channel_write <= cmpy_complex_top_Loop_1_proc143_U0_factor_V_out_write;
    nL_channel_U_ap_dummy_ce <= ap_const_logic_1;
    nL_channel_din <= cmpy_complex_top_Loop_1_proc143_U0_nL_out_din;
    nL_channel_read <= cmpy_complex_top_Loop_2_proc_U0_nL_read;
    nL_channel_write <= cmpy_complex_top_Loop_1_proc143_U0_nL_out_write;
    prealign_V_TREADY <= cmpy_complex_top_Loop_2_proc_U0_prealign_V_TREADY;
    refAtans_V_U_ap_dummy_ce <= ap_const_logic_1;
    refAtans_V_i_address0 <= cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_address0;
    refAtans_V_i_ce0 <= cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_ce0;
    refAtans_V_i_d0 <= cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_d0;
    refAtans_V_i_we0 <= cmpy_complex_top_Loop_1_proc143_U0_refAtans_V_we0;
    refAtans_V_i_write <= ap_chn_write_cmpy_complex_top_Loop_1_proc143_U0_refAtans_V;
    refAtans_V_t_address0 <= cmpy_complex_top_Loop_2_proc_U0_refAtans_V_address0;
    refAtans_V_t_ce0 <= cmpy_complex_top_Loop_2_proc_U0_refAtans_V_ce0;
    refAtans_V_t_d0 <= ap_const_lv20_0;
    refAtans_V_t_read <= cmpy_complex_top_Loop_2_proc_U0_ap_ready;
    refAtans_V_t_we0 <= ap_const_logic_0;
    sigRef_TREADY <= cmpy_complex_top_Loop_1_proc143_U0_sigRef_TREADY;
    sig_TREADY <= cmpy_complex_top_Loop_2_proc_U0_sig_TREADY;
end behav;
