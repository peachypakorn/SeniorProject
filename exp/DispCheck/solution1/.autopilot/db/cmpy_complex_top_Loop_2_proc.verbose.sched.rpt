

================================================================
== Vivado HLS Report for 'cmpy_complex_top_Loop_2_proc'
================================================================
* Date:           Mon Feb 08 23:42:43 2016

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        DispCheck
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.70|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|        34|          1|          1|     ?|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 34


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 36
* Pipeline: 1
  Pipeline-0: II = 1, D = 34, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	36  / (!tmp_18_i)
	3  / (tmp_18_i)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	2  / true
36 --> 
* FSM state operations: 

 <State 1>: 4.38ns
ST_1: stg_37 [1/1] 0.00ns
entry:0  call void (...)* @_ssdm_op_SpecInterface(i40* %cmp, [5 x i8]* @p_str267, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str266, [1 x i8]* @p_str266, [1 x i8]* @p_str266, [1 x i8]* @p_str266)

ST_1: stg_38 [1/1] 0.00ns
entry:1  call void (...)* @_ssdm_op_SpecInterface(i24* %prealign_V, [5 x i8]* @p_str267, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str266, [1 x i8]* @p_str266, [1 x i8]* @p_str266, [1 x i8]* @p_str266)

ST_1: stg_39 [1/1] 0.00ns
entry:2  call void (...)* @_ssdm_op_SpecInterface(i24* %sig, [5 x i8]* @p_str267, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str266, [1 x i8]* @p_str266, [1 x i8]* @p_str266, [1 x i8]* @p_str266)

ST_1: stg_40 [1/1] 0.00ns
entry:3  call void (...)* @_ssdm_op_SpecInterface(i32* %nL, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: stg_41 [1/1] 0.00ns
entry:4  call void (...)* @_ssdm_op_SpecInterface(i10* %factor_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: factor_V_read [1/1] 4.38ns
entry:5  %factor_V_read = call i10 @_ssdm_op_Read.ap_fifo.i10P(i10* %factor_V)

ST_1: nL_read [1/1] 4.38ns
entry:6  %nL_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %nL)

ST_1: OP2_V [1/1] 0.00ns
entry:7  %OP2_V = sext i10 %factor_V_read to i28

ST_1: stg_45 [1/1] 1.57ns
entry:8  br label %.preheader.i


 <State 2>: 8.46ns
ST_2: p_Val2_7 [1/1] 0.00ns
.preheader.i:0  %p_Val2_7 = phi i31 [ 0, %entry ], [ %x, %_ifconv ]

ST_2: i_op_assign_cast_i [1/1] 0.00ns
.preheader.i:1  %i_op_assign_cast_i = zext i31 %p_Val2_7 to i32

ST_2: tmp_18_i [1/1] 2.52ns
.preheader.i:2  %tmp_18_i = icmp slt i32 %i_op_assign_cast_i, %nL_read

ST_2: x [1/1] 2.44ns
.preheader.i:3  %x = add i31 %p_Val2_7, 1

ST_2: stg_50 [1/1] 0.00ns
.preheader.i:4  br i1 %tmp_18_i, label %_ifconv, label %.exit

ST_2: prealign_V_read [1/1] 0.00ns
_ifconv:2  %prealign_V_read = call i24 @_ssdm_op_Read.axis.volatile.i24P(i24* %prealign_V)

ST_2: tmp [1/1] 0.00ns
_ifconv:3  %tmp = trunc i24 %prealign_V_read to i18

ST_2: OP1_V [1/1] 0.00ns
_ifconv:4  %OP1_V = sext i18 %tmp to i28

ST_2: p_Val2_s [1/1] 6.38ns
_ifconv:5  %p_Val2_s = mul i28 %OP2_V, %OP1_V

ST_2: p_Val2_8 [1/1] 0.00ns
_ifconv:6  %p_Val2_8 = call i18 @_ssdm_op_PartSelect.i18.i28.i32.i32(i28 %p_Val2_s, i32 9, i32 26)

ST_2: tmp_1057 [1/1] 0.00ns
_ifconv:7  %tmp_1057 = trunc i31 %p_Val2_7 to i12

ST_2: tmp_1058 [1/1] 0.00ns
_ifconv:9  %tmp_1058 = trunc i31 %p_Val2_7 to i2

ST_2: sig_read [1/1] 0.00ns
_ifconv:20  %sig_read = call i24 @_ssdm_op_Read.axis.volatile.i24P(i24* %sig)

ST_2: s_M_real_V [1/1] 0.00ns
_ifconv:21  %s_M_real_V = trunc i24 %sig_read to i10

ST_2: s_M_imag_V [1/1] 0.00ns
_ifconv:22  %s_M_imag_V = call i10 @_ssdm_op_PartSelect.i10.i24.i32.i32(i24 %sig_read, i32 10, i32 19)

ST_2: x_cartesian_M_real_V [1/1] 0.00ns
_ifconv:23  %x_cartesian_M_real_V = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %s_M_real_V, i5 0)

ST_2: x_cartesian_M_imag_V [1/1] 0.00ns
_ifconv:24  %x_cartesian_M_imag_V = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %s_M_imag_V, i5 0)

ST_2: p_Val2_11 [11/11] 7.55ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_2: tmp_1989_i [1/1] 0.00ns
_ifconv:29  %tmp_1989_i = call i5 @_ssdm_op_PartSelect.i5.i28.i32.i32(i28 %p_Val2_s, i32 9, i32 13)

ST_2: OP1_V_3 [1/1] 0.00ns
_ifconv:101  %OP1_V_3 = sext i10 %s_M_real_V to i20

ST_2: p_Val2_26 [1/1] 6.38ns
_ifconv:102  %p_Val2_26 = mul i20 %OP1_V_3, %OP1_V_3

ST_2: OP1_V_4 [1/1] 0.00ns
_ifconv:103  %OP1_V_4 = sext i10 %s_M_imag_V to i20

ST_2: p_Val2_1 [1/1] 6.38ns
_ifconv:104  %p_Val2_1 = mul i20 %OP1_V_4, %OP1_V_4

ST_2: val_V [1/1] 2.08ns
_ifconv:105  %val_V = add i20 %p_Val2_26, %p_Val2_1


 <State 3>: 8.51ns
ST_3: tmp_22_i [1/1] 0.00ns
_ifconv:8  %tmp_22_i = call i18 @_ssdm_op_BitConcatenate.i18.i12.i6(i12 %tmp_1057, i6 0)

ST_3: OP1_V_1_i [1/1] 2.08ns
_ifconv:11  %OP1_V_1_i = add i18 %p_Val2_8, %tmp_22_i

ST_3: tmp_1059 [1/1] 0.00ns
_ifconv:12  %tmp_1059 = trunc i18 %OP1_V_1_i to i8

ST_3: t_V [1/1] 0.00ns
_ifconv:13  %t_V = shl i18 %OP1_V_1_i, 1

ST_3: tmp_171_tr_i [1/1] 0.00ns
_ifconv:14  %tmp_171_tr_i = zext i18 %t_V to i19

ST_3: tmp_1061 [1/1] 0.00ns
_ifconv:15  %tmp_1061 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %OP1_V_1_i, i32 16)

ST_3: p_neg_i [1/1] 2.08ns
_ifconv:16  %p_neg_i = sub i19 0, %tmp_171_tr_i

ST_3: tmp_1984_i [1/1] 0.00ns
_ifconv:17  %tmp_1984_i = call i8 @_ssdm_op_PartSelect.i8.i19.i32.i32(i19 %p_neg_i, i32 1, i32 8)

ST_3: tmp_1985_i [1/1] 1.72ns
_ifconv:18  %tmp_1985_i = sub i8 0, %tmp_1984_i

ST_3: tmp_1987_i [1/1] 1.37ns
_ifconv:19  %tmp_1987_i = select i1 %tmp_1061, i8 %tmp_1985_i, i8 %tmp_1059

ST_3: p_Val2_11 [10/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_3: ret_V [1/1] 0.00ns
_ifconv:28  %ret_V = call i12 @_ssdm_op_PartSelect.i12.i18.i32.i32(i18 %OP1_V_1_i, i32 5, i32 16)

ST_3: p_Result_7_i [1/1] 0.00ns
_ifconv:30  %p_Result_7_i = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %tmp_1989_i, i1 false)

ST_3: tmp_23_i [1/1] 1.94ns
_ifconv:31  %tmp_23_i = icmp eq i6 %p_Result_7_i, 0

ST_3: ret_V_1 [1/1] 1.84ns
_ifconv:32  %ret_V_1 = add i12 1, %ret_V

ST_3: p_i [1/1] 1.37ns
_ifconv:33  %p_i = select i1 %tmp_23_i, i12 %ret_V, i12 %ret_V_1

ST_3: p_2_i [1/1] 1.37ns
_ifconv:34  %p_2_i = select i1 %tmp_1061, i12 %p_i, i12 %ret_V

ST_3: xuout_V_i [11/11] 4.40ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 4>: 8.64ns
ST_4: tmp_1988_i [1/1] 0.00ns
_ifconv:10  %tmp_1988_i = call i8 @_ssdm_op_BitConcatenate.i8.i2.i6(i2 %tmp_1058, i6 0)

ST_4: p_Val2_11 [9/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_4: p_Val2_3_i [1/1] 1.72ns
_ifconv:79  %p_Val2_3_i = sub i8 %tmp_1987_i, %tmp_1988_i

ST_4: xuout_V_i [10/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 5>: 8.64ns
ST_5: p_Val2_11 [8/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_5: xuout_V_i [9/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 6>: 8.64ns
ST_6: p_Val2_11 [7/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_6: xuout_V_i [8/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 7>: 8.64ns
ST_7: p_Val2_11 [6/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_7: xuout_V_i [7/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 8>: 8.64ns
ST_8: p_Val2_11 [5/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_8: xuout_V_i [6/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 9>: 8.64ns
ST_9: p_Val2_11 [4/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_9: xuout_V_i [5/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 10>: 8.64ns
ST_10: p_Val2_11 [3/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_10: xuout_V_i [4/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 11>: 8.64ns
ST_11: p_Val2_11 [2/11] 8.51ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_11: tmp_24_i [1/1] 0.00ns
_ifconv:35  %tmp_24_i = sext i12 %p_2_i to i64

ST_11: refAtans_V_addr [1/1] 0.00ns
_ifconv:36  %refAtans_V_addr = getelementptr [2048 x i20]* %refAtans_V, i64 0, i64 %tmp_24_i

ST_11: p_Val2_13 [2/2] 2.71ns
_ifconv:37  %p_Val2_13 = load i20* %refAtans_V_addr, align 4

ST_11: xuout_V_i [3/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 12>: 8.64ns
ST_12: p_Val2_11 [1/11] 8.39ns
_ifconv:25  %p_Val2_11 = call fastcc i16 @cmpy_complex_top_cordic_base(i15 %x_cartesian_M_real_V, i15 %x_cartesian_M_imag_V)

ST_12: tmp_1063 [1/1] 0.00ns
_ifconv:26  %tmp_1063 = trunc i16 %p_Val2_11 to i15

ST_12: p_Val2_13 [1/2] 2.71ns
_ifconv:37  %p_Val2_13 = load i20* %refAtans_V_addr, align 4

ST_12: xuout_V_i [2/11] 8.64ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 13>: 8.16ns
ST_13: p_Val2_14 [1/1] 0.00ns
_ifconv:27  %p_Val2_14 = call i20 @_ssdm_op_BitConcatenate.i20.i15.i5(i15 %tmp_1063, i5 0)

ST_13: dRes_V [1/1] 2.08ns
_ifconv:38  %dRes_V = sub i20 %p_Val2_13, %p_Val2_14

ST_13: tmp_26_i [1/1] 0.00ns
_ifconv:39  %tmp_26_i = call i38 @_ssdm_op_BitConcatenate.i38.i20.i18(i20 %dRes_V, i18 0)

ST_13: sext_cast [1/1] 0.00ns
_ifconv:40  %sext_cast = sext i38 %tmp_26_i to i77

ST_13: mul [7/7] 6.08ns
_ifconv:41  %mul = mul i77 320218970421, %sext_cast

ST_13: tmp_1064 [1/1] 0.00ns
_ifconv:43  %tmp_1064 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %dRes_V, i32 19)

ST_13: xuout_V_i [1/11] 7.31ns
_ifconv:106  %xuout_V_i = call fastcc i19 @"cmpy_complex_top_fxp_sqrt<20, 2, 20, 2>"(i20 %val_V)


 <State 14>: 6.08ns
ST_14: mul [6/7] 6.08ns
_ifconv:41  %mul = mul i77 320218970421, %sext_cast


 <State 15>: 6.08ns
ST_15: mul [5/7] 6.08ns
_ifconv:41  %mul = mul i77 320218970421, %sext_cast


 <State 16>: 6.08ns
ST_16: mul [4/7] 6.08ns
_ifconv:41  %mul = mul i77 320218970421, %sext_cast


 <State 17>: 6.08ns
ST_17: mul [3/7] 6.08ns
_ifconv:41  %mul = mul i77 320218970421, %sext_cast


 <State 18>: 6.08ns
ST_18: mul [2/7] 6.08ns
_ifconv:41  %mul = mul i77 320218970421, %sext_cast


 <State 19>: 6.08ns
ST_19: mul [1/7] 6.08ns
_ifconv:41  %mul = mul i77 320218970421, %sext_cast

ST_19: tmp_1066 [1/1] 0.00ns
_ifconv:45  %tmp_1066 = call i21 @_ssdm_op_PartSelect.i21.i77.i32.i32(i77 %mul, i32 56, i32 76)


 <State 20>: 8.70ns
ST_20: neg_mul [1/1] 3.88ns
_ifconv:42  %neg_mul = sub i77 0, %mul

ST_20: tmp_1065 [1/1] 0.00ns
_ifconv:44  %tmp_1065 = call i21 @_ssdm_op_PartSelect.i21.i77.i32.i32(i77 %neg_mul, i32 56, i32 76)

ST_20: p_v_v [1/1] 1.37ns
_ifconv:46  %p_v_v = select i1 %tmp_1064, i21 %tmp_1065, i21 %tmp_1066

ST_20: tmp_1067 [1/1] 0.00ns
_ifconv:47  %tmp_1067 = trunc i21 %p_v_v to i20

ST_20: neg_ti [1/1] 2.08ns
_ifconv:48  %neg_ti = sub i20 0, %tmp_1067

ST_20: tmp_1068 [1/1] 0.00ns
_ifconv:49  %tmp_1068 = trunc i21 %p_v_v to i20

ST_20: tmp_145 [1/1] 1.37ns
_ifconv:50  %tmp_145 = select i1 %tmp_1064, i20 %tmp_1068, i20 %neg_ti


 <State 21>: 7.50ns
ST_21: p_Val2_16 [1/1] 1.37ns
_ifconv:51  %p_Val2_16 = xor i20 %tmp_145, -524288

ST_21: tmp_i [1/1] 0.00ns
_ifconv:52  %tmp_i = call i38 @_ssdm_op_BitConcatenate.i38.i20.i18(i20 %p_Val2_16, i18 0)

ST_21: tmp_1069 [1/1] 0.00ns
_ifconv:53  %tmp_1069 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %p_Val2_16, i32 19)

ST_21: p_neg_i2 [1/1] 2.68ns
_ifconv:54  %p_neg_i2 = sub i38 0, %tmp_i

ST_21: p_cast2_i [1/1] 0.00ns
_ifconv:55  %p_cast2_i = call i19 @_ssdm_op_PartSelect.i19.i20.i32.i32(i20 %p_Val2_16, i32 1, i32 19)

ST_21: p_cast_i [1/1] 0.00ns
_ifconv:56  %p_cast_i = zext i19 %p_cast2_i to i20

ST_21: tmp_146 [1/1] 0.00ns
_ifconv:57  %tmp_146 = call i19 @_ssdm_op_PartSelect.i19.i38.i32.i32(i38 %p_neg_i2, i32 19, i32 37)

ST_21: tmp_5_i [1/1] 0.00ns
_ifconv:58  %tmp_5_i = zext i19 %tmp_146 to i20

ST_21: tmp_6_i [1/1] 2.08ns
_ifconv:59  %tmp_6_i = sub i20 0, %p_cast_i

ST_21: p_Val2_17 [1/1] 1.37ns
_ifconv:60  %p_Val2_17 = select i1 %tmp_1069, i20 %tmp_5_i, i20 %tmp_6_i

ST_21: tmp_1_i [1/1] 0.00ns
_ifconv:61  %tmp_1_i = sext i20 %p_Val2_17 to i21

ST_21: r_V [1/1] 2.08ns
_ifconv:62  %r_V = add i21 131072, %tmp_1_i

ST_21: tmp_1070 [1/1] 0.00ns
_ifconv:63  %tmp_1070 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %r_V, i32 20)

ST_21: tmp_1071 [1/1] 0.00ns
_ifconv:64  %tmp_1071 = trunc i21 %r_V to i18

ST_21: tmp_1072 [1/1] 0.00ns
_ifconv:66  %tmp_1072 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %r_V, i32 18)

ST_21: tmp_1073 [1/1] 0.00ns
_ifconv:67  %tmp_1073 = call i1 @_ssdm_op_BitSelect.i1.i21.i32(i21 %r_V, i32 18)


 <State 22>: 7.13ns
ST_22: tmp_2_i [1/1] 2.31ns
_ifconv:65  %tmp_2_i = icmp eq i18 %tmp_1071, 0

ST_22: tmp_1074 [1/1] 1.37ns
_ifconv:68  %tmp_1074 = xor i1 %tmp_1072, true

ST_22: tmp_1075 [1/1] 1.37ns
_ifconv:69  %tmp_1075 = select i1 %tmp_2_i, i1 %tmp_1073, i1 %tmp_1074

ST_22: tmp_149 [1/1] 1.37ns
_ifconv:70  %tmp_149 = select i1 %tmp_1070, i1 %tmp_1075, i1 %tmp_1073

ST_22: p_Val2_9_i [1/1] 0.00ns
_ifconv:71  %p_Val2_9_i = call i20 @_ssdm_op_BitConcatenate.i20.i1.i19(i1 %tmp_149, i19 0)

ST_22: p_Val2_i5 [1/1] 2.08ns
_ifconv:72  %p_Val2_i5 = sub i20 %p_Val2_16, %p_Val2_9_i


 <State 23>: 8.47ns
ST_23: p_shl_i [1/1] 0.00ns
_ifconv:73  %p_shl_i = call i39 @_ssdm_op_BitConcatenate.i39.i20.i19(i20 %p_Val2_i5, i19 0)

ST_23: p_shl_cast_i [1/1] 0.00ns
_ifconv:74  %p_shl_cast_i = sext i39 %p_shl_i to i40

ST_23: p_Val2_19 [1/1] 2.68ns
_ifconv:75  %p_Val2_19 = sub i40 0, %p_shl_cast_i

ST_23: tmp_1076 [1/1] 0.00ns
_ifconv:76  %tmp_1076 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %p_Val2_19, i32 17)

ST_23: tmp_1990_i [1/1] 0.00ns
_ifconv:77  %tmp_1990_i = call i19 @_ssdm_op_PartSelect.i19.i40.i32.i32(i40 %p_Val2_19, i32 19, i32 37)

ST_23: p_Val2_20 [1/1] 0.00ns
_ifconv:78  %p_Val2_20 = call i20 @_ssdm_op_BitConcatenate.i20.i19.i1(i19 %tmp_1990_i, i1 %tmp_1076)

ST_23: tmp_29_i [1/1] 0.00ns
_ifconv:80  %tmp_29_i = call i20 @_ssdm_op_BitConcatenate.i20.i8.i12(i8 %p_Val2_3_i, i12 0)

ST_23: dRes_V_1 [1/1] 2.08ns
_ifconv:81  %dRes_V_1 = sub i20 %p_Val2_20, %tmp_29_i

ST_23: signbit [1/1] 0.00ns
_ifconv:82  %signbit = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %dRes_V_1, i32 19)

ST_23: tmp_1_i7 [1/1] 0.00ns
_ifconv:83  %tmp_1_i7 = call i15 @_ssdm_op_PartSelect.i15.i20.i32.i32(i20 %dRes_V_1, i32 5, i32 19)

ST_23: tmp_1078 [1/1] 0.00ns
_ifconv:85  %tmp_1078 = call i1 @_ssdm_op_BitSelect.i1.i20.i32(i20 %dRes_V_1, i32 4)

ST_23: tmp_1079 [1/1] 0.00ns
_ifconv:86  %tmp_1079 = trunc i20 %dRes_V_1 to i1

ST_23: tmp_3_i2 [1/1] 1.37ns
_ifconv:87  %tmp_3_i2 = or i1 %tmp_1079, %tmp_1078

ST_23: tmp_4_i1 [1/1] 0.00ns
_ifconv:88  %tmp_4_i1 = call i3 @_ssdm_op_PartSelect.i3.i20.i32.i32(i20 %dRes_V_1, i32 1, i32 3)

ST_23: tmp_6_i1 [1/1] 0.00ns
_ifconv:89  %tmp_6_i1 = call i20 @_ssdm_op_BitConcatenate.i20.i16.i3.i1(i16 0, i3 %tmp_4_i1, i1 %tmp_3_i2)

ST_23: tmp_7_i [1/1] 2.34ns
_ifconv:90  %tmp_7_i = icmp ne i20 %tmp_6_i1, 0


 <State 24>: 3.33ns
ST_24: p_Val2_22 [1/1] 0.00ns
_ifconv:84  %p_Val2_22 = sext i15 %tmp_1_i7 to i16

ST_24: qb_assign [1/1] 1.37ns
_ifconv:91  %qb_assign = and i1 %tmp_7_i, %signbit

ST_24: tmp_8_i [1/1] 0.00ns
_ifconv:92  %tmp_8_i = zext i1 %qb_assign to i16

ST_24: p_Val2_30 [1/1] 1.96ns
_ifconv:93  %p_Val2_30 = add i16 %tmp_8_i, %p_Val2_22


 <State 25>: 8.51ns
ST_25: call_ret_i_i [8/8] 8.51ns
_ifconv:94  %call_ret_i_i = call fastcc { i16, i16 } @cmpy_complex_top_cordic_base.1(i16 %p_Val2_30)


 <State 26>: 8.51ns
ST_26: call_ret_i_i [7/8] 8.51ns
_ifconv:94  %call_ret_i_i = call fastcc { i16, i16 } @cmpy_complex_top_cordic_base.1(i16 %p_Val2_30)


 <State 27>: 8.51ns
ST_27: call_ret_i_i [6/8] 8.51ns
_ifconv:94  %call_ret_i_i = call fastcc { i16, i16 } @cmpy_complex_top_cordic_base.1(i16 %p_Val2_30)


 <State 28>: 8.51ns
ST_28: call_ret_i_i [5/8] 8.51ns
_ifconv:94  %call_ret_i_i = call fastcc { i16, i16 } @cmpy_complex_top_cordic_base.1(i16 %p_Val2_30)


 <State 29>: 8.51ns
ST_29: call_ret_i_i [4/8] 8.51ns
_ifconv:94  %call_ret_i_i = call fastcc { i16, i16 } @cmpy_complex_top_cordic_base.1(i16 %p_Val2_30)


 <State 30>: 8.51ns
ST_30: call_ret_i_i [3/8] 8.51ns
_ifconv:94  %call_ret_i_i = call fastcc { i16, i16 } @cmpy_complex_top_cordic_base.1(i16 %p_Val2_30)


 <State 31>: 8.51ns
ST_31: call_ret_i_i [2/8] 8.51ns
_ifconv:94  %call_ret_i_i = call fastcc { i16, i16 } @cmpy_complex_top_cordic_base.1(i16 %p_Val2_30)


 <State 32>: 8.51ns
ST_32: call_ret_i_i [1/8] 8.51ns
_ifconv:94  %call_ret_i_i = call fastcc { i16, i16 } @cmpy_complex_top_cordic_base.1(i16 %p_Val2_30)

ST_32: xout_cartesian_M_real_V [1/1] 0.00ns
_ifconv:95  %xout_cartesian_M_real_V = extractvalue { i16, i16 } %call_ret_i_i, 0

ST_32: xout_cartesian_M_imag_V [1/1] 0.00ns
_ifconv:96  %xout_cartesian_M_imag_V = extractvalue { i16, i16 } %call_ret_i_i, 1


 <State 33>: 6.08ns
ST_33: sincosOut_M_real_V [1/1] 0.00ns
_ifconv:97  %sincosOut_M_real_V = call i20 @_ssdm_op_BitConcatenate.i20.i16.i4(i16 %xout_cartesian_M_real_V, i4 0)

ST_33: sincosOut_M_imag_V [1/1] 0.00ns
_ifconv:98  %sincosOut_M_imag_V = call i20 @_ssdm_op_BitConcatenate.i20.i16.i4(i16 %xout_cartesian_M_imag_V, i4 0)

ST_33: OP1_V_3_cast [1/1] 0.00ns
_ifconv:99  %OP1_V_3_cast = sext i20 %sincosOut_M_real_V to i39

ST_33: OP1_V_4_cast [1/1] 0.00ns
_ifconv:100  %OP1_V_4_cast = sext i20 %sincosOut_M_imag_V to i39

ST_33: OP2_V_3_cast [1/1] 0.00ns
_ifconv:107  %OP2_V_3_cast = zext i19 %xuout_V_i to i39

ST_33: p_Val2_28 [3/3] 6.08ns
_ifconv:108  %p_Val2_28 = mul i39 %OP2_V_3_cast, %OP1_V_4_cast

ST_33: p_Val2_2 [3/3] 6.08ns
_ifconv:109  %p_Val2_2 = mul i39 %OP2_V_3_cast, %OP1_V_3_cast


 <State 34>: 6.08ns
ST_34: p_Val2_28 [2/3] 6.08ns
_ifconv:108  %p_Val2_28 = mul i39 %OP2_V_3_cast, %OP1_V_4_cast

ST_34: p_Val2_2 [2/3] 6.08ns
_ifconv:109  %p_Val2_2 = mul i39 %OP2_V_3_cast, %OP1_V_3_cast


 <State 35>: 8.16ns
ST_35: tmp_1981_i [1/1] 0.00ns
_ifconv:0  %tmp_1981_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str269)

ST_35: stg_196 [1/1] 0.00ns
_ifconv:1  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str266) nounwind

ST_35: p_Val2_28 [1/3] 6.08ns
_ifconv:108  %p_Val2_28 = mul i39 %OP2_V_3_cast, %OP1_V_4_cast

ST_35: p_Val2_2 [1/3] 6.08ns
_ifconv:109  %p_Val2_2 = mul i39 %OP2_V_3_cast, %OP1_V_3_cast

ST_35: p_Val2_3 [1/1] 0.00ns
_ifconv:110  %p_Val2_3 = call i20 @_ssdm_op_PartSelect.i20.i39.i32.i32(i39 %p_Val2_2, i32 18, i32 37)

ST_35: tmp_1080 [1/1] 0.00ns
_ifconv:111  %tmp_1080 = call i1 @_ssdm_op_BitSelect.i1.i39.i32(i39 %p_Val2_2, i32 17)

ST_35: tmp_31_i [1/1] 0.00ns
_ifconv:112  %tmp_31_i = zext i1 %tmp_1080 to i20

ST_35: p_Val2_31 [1/1] 2.08ns
_ifconv:113  %p_Val2_31 = add i20 %tmp_31_i, %p_Val2_3

ST_35: p_Val2_29 [1/1] 0.00ns
_ifconv:114  %p_Val2_29 = call i20 @_ssdm_op_PartSelect.i20.i39.i32.i32(i39 %p_Val2_28, i32 18, i32 37)

ST_35: tmp_1081 [1/1] 0.00ns
_ifconv:115  %tmp_1081 = call i1 @_ssdm_op_BitSelect.i1.i39.i32(i39 %p_Val2_28, i32 17)

ST_35: tmp_33_i [1/1] 0.00ns
_ifconv:116  %tmp_33_i = zext i1 %tmp_1081 to i20

ST_35: p_Val2_32 [1/1] 2.08ns
_ifconv:117  %p_Val2_32 = add i20 %tmp_33_i, %p_Val2_29

ST_35: cmp_M_imag_V_addr192425_part_s [1/1] 0.00ns
_ifconv:118  %cmp_M_imag_V_addr192425_part_s = call i40 @_ssdm_op_BitConcatenate.i40.i20.i20(i20 %p_Val2_32, i20 %p_Val2_31)

ST_35: stg_208 [1/1] 0.00ns
_ifconv:119  call void @_ssdm_op_Write.axis.volatile.i40P(i40* %cmp, i40 %cmp_M_imag_V_addr192425_part_s)

ST_35: empty [1/1] 0.00ns
_ifconv:120  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str269, i32 %tmp_1981_i)

ST_35: stg_210 [1/1] 0.00ns
_ifconv:121  br label %.preheader.i


 <State 36>: 0.00ns
ST_36: stg_211 [1/1] 0.00ns
.exit:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
