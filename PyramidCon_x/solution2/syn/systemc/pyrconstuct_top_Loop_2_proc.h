// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _pyrconstuct_top_Loop_2_proc_HH_
#define _pyrconstuct_top_Loop_2_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pyrconstuct_top_Loop_2_proc : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<48> > imgOutTmpFFTStream_dout;
    sc_in< sc_logic > imgOutTmpFFTStream_empty_n;
    sc_out< sc_logic > imgOutTmpFFTStream_read;
    sc_out< sc_lv<9> > imgOutTmpBlockRam_M_real_V_address0;
    sc_out< sc_logic > imgOutTmpBlockRam_M_real_V_ce0;
    sc_out< sc_logic > imgOutTmpBlockRam_M_real_V_we0;
    sc_out< sc_lv<24> > imgOutTmpBlockRam_M_real_V_d0;
    sc_out< sc_lv<9> > imgOutTmpBlockRam_M_imag_V_address0;
    sc_out< sc_logic > imgOutTmpBlockRam_M_imag_V_ce0;
    sc_out< sc_logic > imgOutTmpBlockRam_M_imag_V_we0;
    sc_out< sc_lv<24> > imgOutTmpBlockRam_M_imag_V_d0;


    // Module declarations
    pyrconstuct_top_Loop_2_proc(sc_module_name name);
    SC_HAS_PROCESS(pyrconstuct_top_Loop_2_proc);

    ~pyrconstuct_top_Loop_2_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<10> > i_fu_81_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_53;
    sc_signal< sc_lv<1> > exitcond_i_fu_75_p2;
    sc_signal< bool > ap_sig_bdd_60;
    sc_signal< sc_lv<10> > i_0_i_reg_64;
    sc_signal< bool > ap_sig_bdd_69;
    sc_signal< sc_lv<64> > tmp_1_fu_87_p1;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_2F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_53();
    void thread_ap_sig_bdd_60();
    void thread_ap_sig_bdd_69();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_exitcond_i_fu_75_p2();
    void thread_i_fu_81_p2();
    void thread_imgOutTmpBlockRam_M_imag_V_address0();
    void thread_imgOutTmpBlockRam_M_imag_V_ce0();
    void thread_imgOutTmpBlockRam_M_imag_V_d0();
    void thread_imgOutTmpBlockRam_M_imag_V_we0();
    void thread_imgOutTmpBlockRam_M_real_V_address0();
    void thread_imgOutTmpBlockRam_M_real_V_ce0();
    void thread_imgOutTmpBlockRam_M_real_V_d0();
    void thread_imgOutTmpBlockRam_M_real_V_we0();
    void thread_imgOutTmpFFTStream_read();
    void thread_tmp_1_fu_87_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
