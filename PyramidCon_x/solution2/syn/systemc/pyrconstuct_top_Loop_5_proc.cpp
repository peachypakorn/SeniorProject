// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "pyrconstuct_top_Loop_5_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pyrconstuct_top_Loop_5_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pyrconstuct_top_Loop_5_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> pyrconstuct_top_Loop_5_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<3> pyrconstuct_top_Loop_5_proc::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<3> pyrconstuct_top_Loop_5_proc::ap_ST_st4_fsm_2 = "100";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> pyrconstuct_top_Loop_5_proc::ap_const_lv1_1 = "1";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_1 = "1";
const sc_lv<1> pyrconstuct_top_Loop_5_proc::ap_const_lv1_0 = "0";
const sc_lv<10> pyrconstuct_top_Loop_5_proc::ap_const_lv10_0 = "0000000000";
const sc_lv<10> pyrconstuct_top_Loop_5_proc::ap_const_lv10_200 = "1000000000";
const sc_lv<10> pyrconstuct_top_Loop_5_proc::ap_const_lv10_1 = "1";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_A = "1010";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_17 = "10111";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_9 = "1001";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_22 = "100010";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_2F = "101111";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_21 = "100001";
const sc_lv<32> pyrconstuct_top_Loop_5_proc::ap_const_lv32_2 = "10";

pyrconstuct_top_Loop_5_proc::pyrconstuct_top_Loop_5_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_2 );

    SC_METHOD(thread_ap_sig_bdd_166);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_186);
    sensitive << ( exitcond_reg_181 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_sig_bdd_187);
    sensitive << ( pyrFilOut_V_TREADY );
    sensitive << ( ap_sig_bdd_53 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_ap_sig_bdd_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_53);
    sensitive << ( ifftPyrOut_empty_n );
    sensitive << ( exitcond_reg_181 );

    SC_METHOD(thread_ap_sig_bdd_70);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_45 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_2);
    sensitive << ( ap_sig_bdd_166 );

    SC_METHOD(thread_ap_sig_ioackin_pyrFilOut_V_TREADY);
    sensitive << ( pyrFilOut_V_TREADY );
    sensitive << ( ap_reg_ioackin_pyrFilOut_V_TREADY );

    SC_METHOD(thread_exitcond_fu_84_p2);
    sensitive << ( i7_reg_73 );
    sensitive << ( exitcond_reg_181 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_53 );
    sensitive << ( ap_sig_ioackin_pyrFilOut_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_i_fu_90_p2);
    sensitive << ( i7_reg_73 );

    SC_METHOD(thread_ifftPyrOut_read);
    sensitive << ( exitcond_reg_181 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_sig_bdd_53 );
    sensitive << ( ap_sig_ioackin_pyrFilOut_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_p_Val2_2_cast_fu_106_p1);
    sensitive << ( tmp_9_fu_96_p4 );

    SC_METHOD(thread_p_Val2_2_fu_158_p2);
    sensitive << ( tmp_35_cast_fu_154_p1 );
    sensitive << ( p_Val2_4_cast_fu_142_p1 );

    SC_METHOD(thread_p_Val2_4_cast_fu_142_p1);
    sensitive << ( tmp_2_fu_132_p4 );

    SC_METHOD(thread_p_Val2_6_cast_fu_128_p1);
    sensitive << ( p_Val2_s_fu_122_p2 );

    SC_METHOD(thread_p_Val2_s_fu_122_p2);
    sensitive << ( tmp_32_cast_fu_118_p1 );
    sensitive << ( p_Val2_2_cast_fu_106_p1 );

    SC_METHOD(thread_pyrFilOut_V_TDATA);
    sensitive << ( exitcond_reg_181 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_sig_bdd_53 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_1_fu_172_p1 );

    SC_METHOD(thread_pyrFilOut_V_TVALID);
    sensitive << ( exitcond_reg_181 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_sig_bdd_53 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ioackin_pyrFilOut_V_TREADY );

    SC_METHOD(thread_tmp_1_fu_172_p1);
    sensitive << ( tmp_fu_164_p3 );

    SC_METHOD(thread_tmp_2_fu_132_p4);
    sensitive << ( ifftPyrOut_dout );

    SC_METHOD(thread_tmp_32_cast_fu_118_p1);
    sensitive << ( tmp_3_fu_110_p3 );

    SC_METHOD(thread_tmp_35_cast_fu_154_p1);
    sensitive << ( tmp_4_fu_146_p3 );

    SC_METHOD(thread_tmp_3_fu_110_p3);
    sensitive << ( ifftPyrOut_dout );

    SC_METHOD(thread_tmp_4_fu_146_p3);
    sensitive << ( ifftPyrOut_dout );

    SC_METHOD(thread_tmp_9_fu_96_p4);
    sensitive << ( ifftPyrOut_dout );

    SC_METHOD(thread_tmp_fu_164_p3);
    sensitive << ( p_Val2_2_fu_158_p2 );
    sensitive << ( p_Val2_6_cast_fu_128_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_84_p2 );
    sensitive << ( exitcond_reg_181 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_53 );
    sensitive << ( ap_sig_ioackin_pyrFilOut_V_TREADY );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_70 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ioackin_pyrFilOut_V_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pyrconstuct_top_Loop_5_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ifftPyrOut_dout, "(port)ifftPyrOut_dout");
    sc_trace(mVcdFile, ifftPyrOut_empty_n, "(port)ifftPyrOut_empty_n");
    sc_trace(mVcdFile, ifftPyrOut_read, "(port)ifftPyrOut_read");
    sc_trace(mVcdFile, pyrFilOut_V_TDATA, "(port)pyrFilOut_V_TDATA");
    sc_trace(mVcdFile, pyrFilOut_V_TVALID, "(port)pyrFilOut_V_TVALID");
    sc_trace(mVcdFile, pyrFilOut_V_TREADY, "(port)pyrFilOut_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_22, "ap_sig_bdd_22");
    sc_trace(mVcdFile, i7_reg_73, "i7_reg_73");
    sc_trace(mVcdFile, exitcond_fu_84_p2, "exitcond_fu_84_p2");
    sc_trace(mVcdFile, exitcond_reg_181, "exitcond_reg_181");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_45, "ap_sig_bdd_45");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_sig_bdd_53, "ap_sig_bdd_53");
    sc_trace(mVcdFile, ap_sig_ioackin_pyrFilOut_V_TREADY, "ap_sig_ioackin_pyrFilOut_V_TREADY");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, i_fu_90_p2, "i_fu_90_p2");
    sc_trace(mVcdFile, ap_sig_bdd_70, "ap_sig_bdd_70");
    sc_trace(mVcdFile, ap_reg_ioackin_pyrFilOut_V_TREADY, "ap_reg_ioackin_pyrFilOut_V_TREADY");
    sc_trace(mVcdFile, tmp_9_fu_96_p4, "tmp_9_fu_96_p4");
    sc_trace(mVcdFile, tmp_3_fu_110_p3, "tmp_3_fu_110_p3");
    sc_trace(mVcdFile, tmp_32_cast_fu_118_p1, "tmp_32_cast_fu_118_p1");
    sc_trace(mVcdFile, p_Val2_2_cast_fu_106_p1, "p_Val2_2_cast_fu_106_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_122_p2, "p_Val2_s_fu_122_p2");
    sc_trace(mVcdFile, tmp_2_fu_132_p4, "tmp_2_fu_132_p4");
    sc_trace(mVcdFile, tmp_4_fu_146_p3, "tmp_4_fu_146_p3");
    sc_trace(mVcdFile, tmp_35_cast_fu_154_p1, "tmp_35_cast_fu_154_p1");
    sc_trace(mVcdFile, p_Val2_4_cast_fu_142_p1, "p_Val2_4_cast_fu_142_p1");
    sc_trace(mVcdFile, p_Val2_2_fu_158_p2, "p_Val2_2_fu_158_p2");
    sc_trace(mVcdFile, p_Val2_6_cast_fu_128_p1, "p_Val2_6_cast_fu_128_p1");
    sc_trace(mVcdFile, tmp_fu_164_p3, "tmp_fu_164_p3");
    sc_trace(mVcdFile, tmp_1_fu_172_p1, "tmp_1_fu_172_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_2, "ap_sig_cseq_ST_st4_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_166, "ap_sig_bdd_166");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_187, "ap_sig_bdd_187");
    sc_trace(mVcdFile, ap_sig_bdd_186, "ap_sig_bdd_186");
#endif

    }
}

pyrconstuct_top_Loop_5_proc::~pyrconstuct_top_Loop_5_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void pyrconstuct_top_Loop_5_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_2.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_pyrFilOut_V_TREADY = ap_const_logic_0;
    } else {
        if (ap_sig_bdd_186.read()) {
            if (!((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
                ap_reg_ioackin_pyrFilOut_V_TREADY = ap_const_logic_0;
            } else if (ap_sig_bdd_187.read()) {
                ap_reg_ioackin_pyrFilOut_V_TREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             !esl_seteq<1,1,1>(exitcond_fu_84_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !ap_sig_bdd_70.read())) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             esl_seteq<1,1,1>(exitcond_fu_84_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !ap_sig_bdd_70.read()) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                     !((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
                     !esl_seteq<1,1,1>(exitcond_fu_84_p2.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
         esl_seteq<1,1,1>(exitcond_fu_84_p2.read(), ap_const_lv1_0))) {
        i7_reg_73 = i_fu_90_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !ap_sig_bdd_70.read())) {
        i7_reg_73 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        exitcond_reg_181 = exitcond_fu_84_p2.read();
    }
}

void pyrconstuct_top_Loop_5_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_bdd_166() {
    ap_sig_bdd_166 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_bdd_186() {
    ap_sig_bdd_186 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()));
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_bdd_187() {
    ap_sig_bdd_187 = (!(ap_sig_bdd_53.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && esl_seteq<1,1,1>(ap_const_logic_1, pyrFilOut_V_TREADY.read()));
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_bdd_22() {
    ap_sig_bdd_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_bdd_45() {
    ap_sig_bdd_45 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_bdd_53() {
    ap_sig_bdd_53 = (esl_seteq<1,1,1>(ifftPyrOut_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0));
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_bdd_70() {
    ap_sig_bdd_70 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_45.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_cseq_ST_st4_fsm_2() {
    if (ap_sig_bdd_166.read()) {
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_ap_sig_ioackin_pyrFilOut_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pyrFilOut_V_TREADY.read())) {
        ap_sig_ioackin_pyrFilOut_V_TREADY = pyrFilOut_V_TREADY.read();
    } else {
        ap_sig_ioackin_pyrFilOut_V_TREADY = ap_const_logic_1;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_exitcond_fu_84_p2() {
    exitcond_fu_84_p2 = (!i7_reg_73.read().is_01() || !ap_const_lv10_200.is_01())? sc_lv<1>(): sc_lv<1>(i7_reg_73.read() == ap_const_lv10_200);
}

void pyrconstuct_top_Loop_5_proc::thread_i_fu_90_p2() {
    i_fu_90_p2 = (!i7_reg_73.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i7_reg_73.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void pyrconstuct_top_Loop_5_proc::thread_ifftPyrOut_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        ifftPyrOut_read = ap_const_logic_1;
    } else {
        ifftPyrOut_read = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_p_Val2_2_cast_fu_106_p1() {
    p_Val2_2_cast_fu_106_p1 = esl_sext<15,14>(tmp_9_fu_96_p4.read());
}

void pyrconstuct_top_Loop_5_proc::thread_p_Val2_2_fu_158_p2() {
    p_Val2_2_fu_158_p2 = (!tmp_35_cast_fu_154_p1.read().is_01() || !p_Val2_4_cast_fu_142_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_35_cast_fu_154_p1.read()) + sc_bigint<15>(p_Val2_4_cast_fu_142_p1.read()));
}

void pyrconstuct_top_Loop_5_proc::thread_p_Val2_4_cast_fu_142_p1() {
    p_Val2_4_cast_fu_142_p1 = esl_sext<15,14>(tmp_2_fu_132_p4.read());
}

void pyrconstuct_top_Loop_5_proc::thread_p_Val2_6_cast_fu_128_p1() {
    p_Val2_6_cast_fu_128_p1 = esl_sext<17,15>(p_Val2_s_fu_122_p2.read());
}

void pyrconstuct_top_Loop_5_proc::thread_p_Val2_s_fu_122_p2() {
    p_Val2_s_fu_122_p2 = (!tmp_32_cast_fu_118_p1.read().is_01() || !p_Val2_2_cast_fu_106_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_32_cast_fu_118_p1.read()) + sc_bigint<15>(p_Val2_2_cast_fu_106_p1.read()));
}

void pyrconstuct_top_Loop_5_proc::thread_pyrFilOut_V_TDATA() {
    pyrFilOut_V_TDATA = esl_zext<40,34>(tmp_1_fu_172_p1.read());
}

void pyrconstuct_top_Loop_5_proc::thread_pyrFilOut_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !(ap_sig_bdd_53.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pyrFilOut_V_TREADY.read()))) {
        pyrFilOut_V_TVALID = ap_const_logic_1;
    } else {
        pyrFilOut_V_TVALID = ap_const_logic_0;
    }
}

void pyrconstuct_top_Loop_5_proc::thread_tmp_1_fu_172_p1() {
    tmp_1_fu_172_p1 = esl_sext<34,32>(tmp_fu_164_p3.read());
}

void pyrconstuct_top_Loop_5_proc::thread_tmp_2_fu_132_p4() {
    tmp_2_fu_132_p4 = ifftPyrOut_dout.read().range(47, 34);
}

void pyrconstuct_top_Loop_5_proc::thread_tmp_32_cast_fu_118_p1() {
    tmp_32_cast_fu_118_p1 = esl_zext<15,1>(tmp_3_fu_110_p3.read());
}

void pyrconstuct_top_Loop_5_proc::thread_tmp_35_cast_fu_154_p1() {
    tmp_35_cast_fu_154_p1 = esl_zext<15,1>(tmp_4_fu_146_p3.read());
}

void pyrconstuct_top_Loop_5_proc::thread_tmp_3_fu_110_p3() {
    tmp_3_fu_110_p3 = ifftPyrOut_dout.read().range(9, 9);
}

void pyrconstuct_top_Loop_5_proc::thread_tmp_4_fu_146_p3() {
    tmp_4_fu_146_p3 = ifftPyrOut_dout.read().range(33, 33);
}

void pyrconstuct_top_Loop_5_proc::thread_tmp_9_fu_96_p4() {
    tmp_9_fu_96_p4 = ifftPyrOut_dout.read().range(23, 10);
}

void pyrconstuct_top_Loop_5_proc::thread_tmp_fu_164_p3() {
    tmp_fu_164_p3 = esl_concat<15,17>(p_Val2_2_fu_158_p2.read(), p_Val2_6_cast_fu_128_p1.read());
}

void pyrconstuct_top_Loop_5_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_bdd_70.read()) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(exitcond_fu_84_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_53.read() || 
  (esl_seteq<1,1,1>(exitcond_reg_181.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pyrFilOut_V_TREADY.read()))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(exitcond_fu_84_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st4_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

