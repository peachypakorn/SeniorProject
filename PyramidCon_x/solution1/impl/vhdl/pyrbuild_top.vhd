-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pyrbuild_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fftIn_V_M_real_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    fftIn_V_M_real_V_TVALID : IN STD_LOGIC;
    fftIn_V_M_real_V_TREADY : OUT STD_LOGIC;
    fftIn_V_M_imag_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    fftIn_V_M_imag_V_TVALID : IN STD_LOGIC;
    fftIn_V_M_imag_V_TREADY : OUT STD_LOGIC;
    pyrFilOut_V_M_real_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    pyrFilOut_V_M_real_V_TVALID : OUT STD_LOGIC;
    pyrFilOut_V_M_real_V_TREADY : IN STD_LOGIC;
    pyrFilOut_V_M_imag_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    pyrFilOut_V_M_imag_V_TVALID : OUT STD_LOGIC;
    pyrFilOut_V_M_imag_V_TREADY : IN STD_LOGIC;
    width : IN STD_LOGIC_VECTOR (31 downto 0);
    height : IN STD_LOGIC_VECTOR (31 downto 0);
    nL : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of pyrbuild_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pyrbuild_top,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.380000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=4,HLS_SYN_FF=297,HLS_SYN_LUT=302}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_st6_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_pp1_stg0_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_200 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal consFilters_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal consFilters_V_ce0 : STD_LOGIC;
    signal consFilters_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal coefIdx_reg_172 : STD_LOGIC_VECTOR (9 downto 0);
    signal coefIdx_2_reg_206 : STD_LOGIC_VECTOR (11 downto 0);
    signal idx_reg_216 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_227 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_63 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal exitcond1_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_73 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal exitcond1_reg_528 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond1_reg_528_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_pp1_stg0_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_98 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal exitcond2_reg_601 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond2_reg_601_pp1_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppiten_pp1_it3 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond1_reg_528_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_237_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_M_real_V_2_reg_537 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_tmp_M_real_V_2_reg_537_pp0_it1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_M_imag_V_2_reg_542 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ppstg_tmp_M_imag_V_2_reg_542_pp0_it1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_552 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_557 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_reg_562 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_567 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_154 : BOOLEAN;
    signal l_1_fu_326_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_1_reg_576 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_356_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_reg_581 : STD_LOGIC_VECTOR (9 downto 0);
    signal coefIdx_3_fu_360_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal coefIdx_3_reg_586 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_cast_fu_372_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_cast_reg_591 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_380_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_reg_596 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond2_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond2_reg_601_pp1_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_395_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal coefIdx_4_fu_430_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal fftTmp_M_real_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal val_M_real_V_reg_630 : STD_LOGIC_VECTOR (15 downto 0);
    signal fftTmp_M_imag_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal val_M_imag_V_reg_635 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_7_reg_640 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_645 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_reg_650 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_655 : STD_LOGIC_VECTOR (0 downto 0);
    signal fftTmp_M_real_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fftTmp_M_real_V_ce0 : STD_LOGIC;
    signal fftTmp_M_real_V_we0 : STD_LOGIC;
    signal fftTmp_M_real_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal fftTmp_M_imag_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal fftTmp_M_imag_V_ce0 : STD_LOGIC;
    signal fftTmp_M_imag_V_we0 : STD_LOGIC;
    signal fftTmp_M_imag_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal coefIdx_1_reg_183 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_phibuf_coefIdx_1_reg_183 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_nseq_ST_st6_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_241 : BOOLEAN;
    signal l_reg_195 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_425_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_12_fu_305_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_14_fu_481_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_13_fu_314_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_15_fu_490_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY : STD_LOGIC := '0';
    signal p_Val2_s_fu_496_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_3_fu_520_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_i_fu_302_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_i_fu_311_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal l_cast3_fu_332_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal nlimit_fu_336_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_346_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal nlimit_cast2_fu_342_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_366_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_376_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_386_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_1_fu_406_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i1_0_s_fu_411_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_fu_512_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_9_fu_504_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_i1_fu_478_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_i1_fu_487_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_fu_496_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal OP2_V_cast_fu_263_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_9_fu_504_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal OP2_V_1_cast_fu_439_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_6_fu_512_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_3_fu_520_p0 : STD_LOGIC_VECTOR (14 downto 0);

    component pyrbuild_top_mul_mul_15ns_16s_31_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component pyrbuild_top_consFilters_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component pyrbuild_top_fftTmp_M_real_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    consFilters_V_U : component pyrbuild_top_consFilters_V
    generic map (
        DataWidth => 15,
        AddressRange => 1520,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => consFilters_V_address0,
        ce0 => consFilters_V_ce0,
        q0 => consFilters_V_q0);

    fftTmp_M_real_V_U : component pyrbuild_top_fftTmp_M_real_V
    generic map (
        DataWidth => 16,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fftTmp_M_real_V_address0,
        ce0 => fftTmp_M_real_V_ce0,
        we0 => fftTmp_M_real_V_we0,
        d0 => fftTmp_M_real_V_d0,
        q0 => fftTmp_M_real_V_q0);

    fftTmp_M_imag_V_U : component pyrbuild_top_fftTmp_M_real_V
    generic map (
        DataWidth => 16,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => fftTmp_M_imag_V_address0,
        ce0 => fftTmp_M_imag_V_ce0,
        we0 => fftTmp_M_imag_V_we0,
        d0 => fftTmp_M_imag_V_d0,
        q0 => fftTmp_M_imag_V_q0);

    pyrbuild_top_mul_mul_15ns_16s_31_1_U0 : component pyrbuild_top_mul_mul_15ns_16s_31_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        din0 => p_Val2_s_fu_496_p0,
        din1 => ap_reg_ppstg_tmp_M_real_V_2_reg_537_pp0_it1,
        dout => p_Val2_s_fu_496_p2);

    pyrbuild_top_mul_mul_15ns_16s_31_1_U1 : component pyrbuild_top_mul_mul_15ns_16s_31_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        din0 => p_Val2_9_fu_504_p0,
        din1 => val_M_imag_V_reg_635,
        dout => p_Val2_9_fu_504_p2);

    pyrbuild_top_mul_mul_15ns_16s_31_1_U2 : component pyrbuild_top_mul_mul_15ns_16s_31_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        din0 => p_Val2_6_fu_512_p0,
        din1 => val_M_real_V_reg_630,
        dout => p_Val2_6_fu_512_p2);

    pyrbuild_top_mul_mul_15ns_16s_31_1_U3 : component pyrbuild_top_mul_mul_15ns_16s_31_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        din0 => p_Val2_3_fu_520_p0,
        din1 => ap_reg_ppstg_tmp_M_imag_V_2_reg_542_pp0_it1,
        dout => p_Val2_3_fu_520_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY assign process. --
    ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))))) then 
                    ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = pyrFilOut_V_M_imag_V_TREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = pyrFilOut_V_M_imag_V_TREADY)))) then 
                    ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY assign process. --
    ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))))) then 
                    ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = pyrFilOut_V_M_real_V_TREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = pyrFilOut_V_M_real_V_TREADY)))) then 
                    ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_231_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_231_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_231_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_lv1_0 = exitcond2_fu_390_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2) and (ap_const_lv1_0 = exitcond_fu_320_p2))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and (ap_const_lv1_0 = exitcond2_fu_390_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2) and (ap_const_lv1_0 = exitcond_fu_320_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_lv1_0 = exitcond2_fu_390_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it2 assign process. --
    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it3 assign process. --
    ap_reg_ppiten_pp1_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))) then 
                    ap_reg_ppiten_pp1_it3 <= ap_reg_ppiten_pp1_it2;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2) and (ap_const_lv1_0 = exitcond_fu_320_p2))) then 
                    ap_reg_ppiten_pp1_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- coefIdx_1_reg_183 assign process. --
    coefIdx_1_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_lv1_0 = exitcond2_fu_390_p2)) and (ap_const_logic_1 = ap_sig_nseq_ST_st6_fsm_2))) then 
                coefIdx_1_reg_183 <= coefIdx_3_reg_586;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_1 = ap_sig_nseq_ST_st6_fsm_2))) then 
                coefIdx_1_reg_183 <= ap_reg_phibuf_coefIdx_1_reg_183;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_231_p2 = ap_const_lv1_0)))) then 
                coefIdx_1_reg_183 <= ap_const_lv12_200;
            end if; 
        end if;
    end process;

    -- coefIdx_2_reg_206 assign process. --
    coefIdx_2_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and (ap_const_lv1_0 = exitcond2_fu_390_p2))) then 
                coefIdx_2_reg_206 <= coefIdx_4_fu_430_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2) and (ap_const_lv1_0 = exitcond_fu_320_p2))) then 
                coefIdx_2_reg_206 <= coefIdx_1_reg_183;
            end if; 
        end if;
    end process;

    -- coefIdx_reg_172 assign process. --
    coefIdx_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                coefIdx_reg_172 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
                coefIdx_reg_172 <= i_fu_237_p2;
            end if; 
        end if;
    end process;

    -- idx_reg_216 assign process. --
    idx_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and (ap_const_lv1_0 = exitcond2_fu_390_p2))) then 
                idx_reg_216 <= i_1_fu_395_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2) and (ap_const_lv1_0 = exitcond_fu_320_p2))) then 
                idx_reg_216 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    -- l_reg_195 assign process. --
    l_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_lv1_0 = exitcond2_fu_390_p2)))) then 
                l_reg_195 <= l_1_reg_576;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_231_p2 = ap_const_lv1_0)))) then 
                l_reg_195 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_lv1_0 = exitcond2_fu_390_p2)))) then
                ap_reg_phibuf_coefIdx_1_reg_183 <= coefIdx_3_reg_586;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then
                ap_reg_ppstg_exitcond1_reg_528_pp0_it1 <= exitcond1_reg_528;
                ap_reg_ppstg_tmp_M_imag_V_2_reg_542_pp0_it1 <= tmp_M_imag_V_2_reg_542;
                ap_reg_ppstg_tmp_M_real_V_2_reg_537_pp0_it1 <= tmp_M_real_V_2_reg_537;
                exitcond1_reg_528 <= exitcond1_fu_231_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) then
                ap_reg_ppstg_exitcond1_reg_528_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_528_pp0_it1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))))) then
                ap_reg_ppstg_exitcond2_reg_601_pp1_it1 <= exitcond2_reg_601;
                exitcond2_reg_601 <= exitcond2_fu_390_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))) then
                ap_reg_ppstg_exitcond2_reg_601_pp1_it2 <= ap_reg_ppstg_exitcond2_reg_601_pp1_it1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2) and (ap_const_lv1_0 = exitcond_fu_320_p2))) then
                coefIdx_3_reg_586 <= coefIdx_3_fu_360_p2;
                tmp_6_reg_596 <= tmp_6_fu_380_p2;
                    tmp_8_cast_reg_591(8 downto 0) <= tmp_8_cast_fu_372_p1(8 downto 0);
                    tmp_reg_581(8 downto 0) <= tmp_fu_356_p1(8 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2)) then
                l_1_reg_576 <= l_1_fu_326_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it1))) then
                p_Val2_10_reg_650 <= p_Val2_9_fu_504_p2(29 downto 14);
                p_Val2_7_reg_640 <= p_Val2_6_fu_512_p2(29 downto 14);
                tmp_13_reg_645 <= p_Val2_6_fu_512_p2(13 downto 13);
                tmp_14_reg_655 <= p_Val2_9_fu_504_p2(13 downto 13);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it1))) then
                p_Val2_1_reg_552 <= p_Val2_s_fu_496_p2(29 downto 14);
                p_Val2_4_reg_562 <= p_Val2_3_fu_520_p2(29 downto 14);
                tmp_10_reg_567 <= p_Val2_3_fu_520_p2(13 downto 13);
                tmp_5_reg_557 <= p_Val2_s_fu_496_p2(13 downto 13);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and (ap_const_lv1_0 = exitcond1_reg_528)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and (ap_const_lv1_0 = exitcond2_reg_601)))) then
                reg_227 <= consFilters_V_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_231_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then
                tmp_M_imag_V_2_reg_542 <= fftIn_V_M_imag_V_TDATA;
                tmp_M_real_V_2_reg_537 <= fftIn_V_M_real_V_TDATA;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and (ap_const_lv1_0 = exitcond2_reg_601))) then
                val_M_imag_V_reg_635 <= fftTmp_M_imag_V_q0;
                val_M_real_V_reg_630 <= fftTmp_M_real_V_q0;
            end if;
        end if;
    end process;
    tmp_reg_581(9) <= '0';
    tmp_8_cast_reg_591(9) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it1, exitcond1_fu_231_p2, ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_reg_ppstg_exitcond2_reg_601_pp1_it2, ap_reg_ppiten_pp1_it3, exitcond_fu_320_p2, exitcond2_fu_390_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_231_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not((exitcond1_fu_231_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_st6_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond_fu_320_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_3;
                end if;
            when ap_ST_pp1_stg0_fsm_3 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_lv1_0 = exitcond2_fu_390_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_3;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) and not((ap_const_lv1_0 = exitcond2_fu_390_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    OP2_V_1_cast_fu_439_p1 <= std_logic_vector(resize(unsigned(reg_227),31));
    OP2_V_cast_fu_263_p1 <= std_logic_vector(resize(unsigned(reg_227),31));

    -- ap_done assign process. --
    ap_done_assign_proc : process(exitcond_fu_320_p2, ap_sig_cseq_ST_st6_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2) and not((ap_const_lv1_0 = exitcond_fu_320_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond_fu_320_p2, ap_sig_cseq_ST_st6_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2) and not((ap_const_lv1_0 = exitcond_fu_320_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_154 assign process. --
    ap_sig_bdd_154_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_154 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_241 assign process. --
    ap_sig_bdd_241_assign_proc : process(ap_NS_fsm)
    begin
                ap_sig_bdd_241 <= (ap_const_lv1_1 = ap_NS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_63 assign process. --
    ap_sig_bdd_63_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_63 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_73 assign process. --
    ap_sig_bdd_73_assign_proc : process(fftIn_V_M_real_V_TVALID, exitcond1_fu_231_p2)
    begin
                ap_sig_bdd_73 <= ((fftIn_V_M_real_V_TVALID = ap_const_logic_0) and (exitcond1_fu_231_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_98 assign process. --
    ap_sig_bdd_98_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_98 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_bdd_63)
    begin
        if (ap_sig_bdd_63) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_3 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_3_assign_proc : process(ap_sig_bdd_98)
    begin
        if (ap_sig_bdd_98) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_2 assign process. --
    ap_sig_cseq_ST_st6_fsm_2_assign_proc : process(ap_sig_bdd_154)
    begin
        if (ap_sig_bdd_154) then 
            ap_sig_cseq_ST_st6_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY assign process. --
    ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY_assign_proc : process(pyrFilOut_V_M_real_V_TREADY, ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY)) then 
            ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY <= pyrFilOut_V_M_real_V_TREADY;
        else 
            ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_nseq_ST_st6_fsm_2 assign process. --
    ap_sig_nseq_ST_st6_fsm_2_assign_proc : process(ap_sig_bdd_241)
    begin
        if (ap_sig_bdd_241) then 
            ap_sig_nseq_ST_st6_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_nseq_ST_st6_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    coefIdx_3_fu_360_p2 <= std_logic_vector(unsigned(coefIdx_1_reg_183) + unsigned(nlimit_cast2_fu_342_p1));
    coefIdx_4_fu_430_p2 <= std_logic_vector(unsigned(coefIdx_2_reg_206) + unsigned(ap_const_lv12_1));

    -- consFilters_V_address0 assign process. --
    consFilters_V_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it0, tmp_4_fu_253_p1, tmp_3_fu_425_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            consFilters_V_address0 <= tmp_3_fu_425_p1(11 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            consFilters_V_address0 <= tmp_4_fu_253_p1(11 - 1 downto 0);
        else 
            consFilters_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    -- consFilters_V_ce0 assign process. --
    consFilters_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY, ap_reg_ppiten_pp0_it3, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it0, ap_reg_ppstg_exitcond2_reg_601_pp1_it2, ap_reg_ppiten_pp1_it3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))))) then 
            consFilters_V_ce0 <= ap_const_logic_1;
        else 
            consFilters_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_231_p2 <= "1" when (coefIdx_reg_172 = ap_const_lv10_200) else "0";
    exitcond2_fu_390_p2 <= "1" when (tmp_12_fu_386_p1 = tmp_6_reg_596) else "0";
    exitcond_fu_320_p2 <= "1" when (l_reg_195 = ap_const_lv3_6) else "0";

    -- fftIn_V_M_imag_V_TREADY assign process. --
    fftIn_V_M_imag_V_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, exitcond1_fu_231_p2, ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            fftIn_V_M_imag_V_TREADY <= ap_const_logic_1;
        else 
            fftIn_V_M_imag_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- fftIn_V_M_real_V_TREADY assign process. --
    fftIn_V_M_real_V_TREADY_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, exitcond1_fu_231_p2, ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY, ap_reg_ppiten_pp0_it3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))))) then 
            fftIn_V_M_real_V_TREADY <= ap_const_logic_1;
        else 
            fftIn_V_M_real_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- fftTmp_M_imag_V_address0 assign process. --
    fftTmp_M_imag_V_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it0, tmp_4_fu_253_p1, tmp_9_fu_419_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            fftTmp_M_imag_V_address0 <= tmp_4_fu_253_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            fftTmp_M_imag_V_address0 <= tmp_9_fu_419_p1(10 - 1 downto 0);
        else 
            fftTmp_M_imag_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- fftTmp_M_imag_V_ce0 assign process. --
    fftTmp_M_imag_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY, ap_reg_ppiten_pp0_it3, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it0, ap_reg_ppstg_exitcond2_reg_601_pp1_it2, ap_reg_ppiten_pp1_it3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))))) then 
            fftTmp_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            fftTmp_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fftTmp_M_imag_V_d0 <= fftIn_V_M_imag_V_TDATA;

    -- fftTmp_M_imag_V_we0 assign process. --
    fftTmp_M_imag_V_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, exitcond1_fu_231_p2, ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY, ap_reg_ppiten_pp0_it3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))))) then 
            fftTmp_M_imag_V_we0 <= ap_const_logic_1;
        else 
            fftTmp_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- fftTmp_M_real_V_address0 assign process. --
    fftTmp_M_real_V_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it0, tmp_4_fu_253_p1, tmp_9_fu_419_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            fftTmp_M_real_V_address0 <= tmp_4_fu_253_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            fftTmp_M_real_V_address0 <= tmp_9_fu_419_p1(10 - 1 downto 0);
        else 
            fftTmp_M_real_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    -- fftTmp_M_real_V_ce0 assign process. --
    fftTmp_M_real_V_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY, ap_reg_ppiten_pp0_it3, ap_sig_cseq_ST_pp1_stg0_fsm_3, ap_reg_ppiten_pp1_it0, ap_reg_ppstg_exitcond2_reg_601_pp1_it2, ap_reg_ppiten_pp1_it3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3)))))) then 
            fftTmp_M_real_V_ce0 <= ap_const_logic_1;
        else 
            fftTmp_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    fftTmp_M_real_V_d0 <= fftIn_V_M_real_V_TDATA;

    -- fftTmp_M_real_V_we0 assign process. --
    fftTmp_M_real_V_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, exitcond1_fu_231_p2, ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY, ap_reg_ppiten_pp0_it3)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (exitcond1_fu_231_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_0 = ap_sig_ioackin_pyrFilOut_V_M_real_V_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3))))))) then 
            fftTmp_M_real_V_we0 <= ap_const_logic_1;
        else 
            fftTmp_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i1_0_s_fu_411_p3 <= 
        idx_reg_216 when (tmp_7_fu_401_p2(0) = '1') else 
        idx_1_fu_406_p2;
    i_1_fu_395_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(idx_reg_216));
    i_fu_237_p2 <= std_logic_vector(unsigned(coefIdx_reg_172) + unsigned(ap_const_lv10_1));
    idx_1_fu_406_p2 <= std_logic_vector(unsigned(tmp_8_cast_reg_591) + unsigned(idx_reg_216));
    l_1_fu_326_p2 <= std_logic_vector(unsigned(l_reg_195) + unsigned(ap_const_lv3_1));
    l_cast3_fu_332_p1 <= std_logic_vector(resize(unsigned(l_reg_195),10));
    nlimit_cast2_fu_342_p1 <= std_logic_vector(resize(unsigned(nlimit_fu_336_p2),12));
    nlimit_fu_336_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv10_200),to_integer(unsigned('0' & l_cast3_fu_332_p1(10-1 downto 0)))));
    p_Val2_12_fu_305_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_552) + unsigned(tmp_2_i_fu_302_p1));
    p_Val2_13_fu_314_p2 <= std_logic_vector(unsigned(p_Val2_4_reg_562) + unsigned(tmp_9_i_fu_311_p1));
    p_Val2_14_fu_481_p2 <= std_logic_vector(unsigned(p_Val2_7_reg_640) + unsigned(tmp_2_i1_fu_478_p1));
    p_Val2_15_fu_490_p2 <= std_logic_vector(unsigned(p_Val2_10_reg_650) + unsigned(tmp_9_i1_fu_487_p1));
    p_Val2_3_fu_520_p0 <= OP2_V_cast_fu_263_p1(15 - 1 downto 0);
    p_Val2_6_fu_512_p0 <= OP2_V_1_cast_fu_439_p1(15 - 1 downto 0);
    p_Val2_9_fu_504_p0 <= OP2_V_1_cast_fu_439_p1(15 - 1 downto 0);
    p_Val2_s_fu_496_p0 <= OP2_V_cast_fu_263_p1(15 - 1 downto 0);

    -- pyrFilOut_V_M_imag_V_TDATA assign process. --
    pyrFilOut_V_M_imag_V_TDATA_assign_proc : process(ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond2_reg_601_pp1_it2, ap_reg_ppiten_pp1_it3, p_Val2_13_fu_314_p2, p_Val2_15_fu_490_p2)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) then 
            pyrFilOut_V_M_imag_V_TDATA <= p_Val2_15_fu_490_p2;
        elsif (((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            pyrFilOut_V_M_imag_V_TDATA <= p_Val2_13_fu_314_p2;
        else 
            pyrFilOut_V_M_imag_V_TDATA <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- pyrFilOut_V_M_imag_V_TVALID assign process. --
    pyrFilOut_V_M_imag_V_TVALID_assign_proc : process(ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond2_reg_601_pp1_it2, ap_reg_ppiten_pp1_it3, ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_0 = ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_0 = ap_reg_ioackin_pyrFilOut_V_M_imag_V_TREADY)))) then 
            pyrFilOut_V_M_imag_V_TVALID <= ap_const_logic_1;
        else 
            pyrFilOut_V_M_imag_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    -- pyrFilOut_V_M_real_V_TDATA assign process. --
    pyrFilOut_V_M_real_V_TDATA_assign_proc : process(ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond2_reg_601_pp1_it2, ap_reg_ppiten_pp1_it3, p_Val2_12_fu_305_p2, p_Val2_14_fu_481_p2)
    begin
        if (((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3))) then 
            pyrFilOut_V_M_real_V_TDATA <= p_Val2_14_fu_481_p2;
        elsif (((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))))) then 
            pyrFilOut_V_M_real_V_TDATA <= p_Val2_12_fu_305_p2;
        else 
            pyrFilOut_V_M_real_V_TDATA <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- pyrFilOut_V_M_real_V_TVALID assign process. --
    pyrFilOut_V_M_real_V_TVALID_assign_proc : process(ap_sig_bdd_73, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_exitcond1_reg_528_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond2_reg_601_pp1_it2, ap_reg_ppiten_pp1_it3, ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY)
    begin
        if ((((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_528_pp0_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_sig_bdd_73 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_0 = ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY)) or ((ap_const_lv1_0 = ap_reg_ppstg_exitcond2_reg_601_pp1_it2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it3) and (ap_const_logic_0 = ap_reg_ioackin_pyrFilOut_V_M_real_V_TREADY)))) then 
            pyrFilOut_V_M_real_V_TVALID <= ap_const_logic_1;
        else 
            pyrFilOut_V_M_real_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_fu_376_p1 <= coefIdx_1_reg_183(10 - 1 downto 0);
    tmp_12_fu_386_p1 <= coefIdx_2_reg_206(10 - 1 downto 0);
    tmp_2_fu_346_p4 <= nlimit_fu_336_p2(9 downto 1);
    tmp_2_i1_fu_478_p1 <= std_logic_vector(resize(unsigned(tmp_13_reg_645),16));
    tmp_2_i_fu_302_p1 <= std_logic_vector(resize(unsigned(tmp_5_reg_557),16));
    tmp_3_fu_425_p1 <= std_logic_vector(resize(unsigned(coefIdx_2_reg_206),64));
    tmp_4_fu_253_p1 <= std_logic_vector(resize(unsigned(coefIdx_reg_172),64));
    tmp_6_fu_380_p2 <= std_logic_vector(unsigned(nlimit_fu_336_p2) + unsigned(tmp_11_fu_376_p1));
    tmp_7_fu_401_p2 <= "1" when (unsigned(idx_reg_216) < unsigned(tmp_reg_581)) else "0";
    tmp_8_cast_fu_372_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_366_p2),10));
    tmp_8_fu_366_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(tmp_2_fu_346_p4));
    tmp_9_fu_419_p1 <= std_logic_vector(resize(unsigned(i1_0_s_fu_411_p3),64));
    tmp_9_i1_fu_487_p1 <= std_logic_vector(resize(unsigned(tmp_14_reg_655),16));
    tmp_9_i_fu_311_p1 <= std_logic_vector(resize(unsigned(tmp_10_reg_567),16));
    tmp_fu_356_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_346_p4),10));
end behav;
